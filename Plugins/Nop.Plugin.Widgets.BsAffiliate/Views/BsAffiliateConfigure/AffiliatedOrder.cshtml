@using Nop.Web.Framework;
@using Nop.Core.Infrastructure;
@model Nop.Plugin.Widgets.BsAffiliate.Models.AffiliatedOrderModel
@using Nop.Web.Framework.UI;
@{
    Layout = "~/Administration/Views/Shared/_AdminLayout.cshtml";
    ViewBag.Title = T("Plugins.Widgets.BsAffiliate.AffiliatedOrder").Text;
    Html.SetActiveMenuItemSystemName("Affiliated.Order");
}

@Html.AntiForgeryToken()
<div class="content-header clearfix">
    <h1 class="pull-left">
        @T("Plugins.Widgets.BsAffiliate.AffiliatedOrder")
    </h1>
</div>

<div class="content">
    <div class="form-horizontal">
        <div class="panel-group">

            <div class="panel panel-default panel-search">
                <div class="panel-body">
                    <div class="row">
                        <div class="col-md-6">
                            <div class="form-group">
                                <div class="col-md-4">
                                    @Html.NopLabelFor(model => model.StartDate)
                                </div>
                                <div class="col-md-8">
                                    @Html.NopEditorFor(model => Model.StartDate)
                                </div>
                            </div>
                            <div class="form-group">
                                <div class="col-md-4">
                                    @Html.NopLabelFor(model => model.EndDate)
                                </div>
                                <div class="col-md-8">
                                    @Html.NopEditorFor(model => Model.EndDate)
                                </div>
                            </div>
                            <div class="form-group">
                                <div class="col-md-4">
                                    @Html.NopLabelFor(model => model.AffiliateFirstName)
                                </div>
                                <div class="col-md-8">
                                    @Html.NopEditorFor(model => Model.AffiliateFirstName)
                                </div>
                            </div>
                            <div class="form-group">
                                <div class="col-md-4">
                                    @Html.NopLabelFor(model => model.AffiliateLastName)
                                </div>
                                <div class="col-md-8">
                                    @Html.NopEditorFor(model => Model.AffiliateLastName)
                                </div>
                            </div>
                            <div class="form-group">
                                <div class="col-md-4">
                                    @Html.NopLabelFor(model => model.AffiliateEmail)
                                </div>
                                <div class="col-md-8">
                                    @Html.NopEditorFor(model => Model.AffiliateEmail)
                                </div>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                <div class="col-md-4">
                                    @Html.NopLabelFor(model => model.StoreId)
                                </div>
                                <div class="col-md-8">
                                    @Html.NopDropDownList("StoreId", Model.AvailableStores)
                                </div>
                            </div>
                            <div class="form-group">
                                <div class="col-md-4">
                                    @Html.NopLabelFor(model => model.OrderStatus)
                                </div>
                                <div class="col-md-8">
                                    @Html.EnumDropDownListFor(model => model.OrderStatus, "All", new { @class = "form-control" })
                                </div>
                            </div>
                            <div class="form-group">
                                <div class="col-md-4">
                                    @Html.NopLabelFor(model => model.OrderPaymentStatus)
                                </div>
                                <div class="col-md-8">
                                    @Html.EnumDropDownListFor(model => model.OrderPaymentStatus, "All", new { @class = "form-control" })
                                </div>
                            </div>
                            <div class="form-group">
                                <div class="col-md-4">
                                    @Html.NopLabelFor(model => model.CommissionPaymentStatus)
                                </div>
                                <div class="col-md-8">
                                    @Html.EnumDropDownListFor(model => model.CommissionPaymentStatus, "All", new { @class = "form-control" })
                                </div>
                            </div>
                            <div class="form-group">
                                <div class="col-md-8 col-md-offset-4">
                                    <button type="button" id="btnSearch" class="btn btn-primary btn-search">
                                        <i class="fa fa-search"></i>
                                        @T("Admin.Common.Search")
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="panel panel-default">
                <div class="panel-body">
                    <div id="commission-grid"></div>
                    <script>
                            $(document).ready(function() {
                                $("#commission-grid").kendoGrid({
                                    dataSource: {
                                        type: "json",
                                        transport: {
                                            read: {
                                                url: "@Html.Raw(Url.Action("GetOrders", "BsAffiliateConfigure"))",
                                                type: "POST",
                                                dataType: "json",
                                                contentType: "application/json",
                                                data: additionalData,
                                            },
                                            parameterMap: function(data, operation) {
                                                if (operation != "read") {
                                                    return data;
                                                } else {
                                                    //for some reasons only such "Filter" data be parsed
                                                    return JSON.stringify(data);
                                                }
                                            }
                                        },
                                        schema: {
                                            data: "Data",
                                            total: "Total",
                                            errors: "Errors",
                                            model: {
                                                id: "Id"
                                            }
                                        },
                                        requestEnd: function(e) {
                                            if (e.type == "read") {
                                                var response = e.response;
                                                if (response) {
                                                    //store extra data
                                                    reportAggregates = e.response["ExtraData"];
                                                }
                                            }
                                        },
                                        error: function(e) {
                                            display_kendoui_grid_error(e);
                                            // Cancel the changes
                                            this.cancelChanges();
                                        },
                                        pageSize: @(EngineContext.Current.Resolve<Nop.Core.Domain.Common.AdminAreaSettings>().DefaultGridPageSize),
                                        serverPaging: true,
                                        serverFiltering: true,
                                        serverSorting: true
                                    },
                                    pageable: {
                                        refresh: true,
                                        pageSizes: [@(EngineContext.Current.Resolve<Nop.Core.Domain.Common.AdminAreaSettings>().GridPageSizes)]
                                    },
                                    scrollable: false,
                                    dataBound: onDataBound,
                                    columns: [
                                        {
                                            field: "OrderId",
                                            title: "@T("Plugins.Widgets.BsAffiliate.AffiliateOrderModel.OrderID")",
                                            width: 50
                                        }, {
                                            field: "OrderDateString",
                                            title: "@T("Plugins.Widgets.BsAffiliate.AffiliateOrderModel.OrderDate")",
                                            width: 100,
                                            type: "date",
                                            format: "{0:G}"
                                        }, {
                                            field: "AffiliateName",
                                            title: "@T("Plugins.Widgets.BsAffiliate.AffiliateOrderModel.AffiliateName")",
                                            width: 300,
                                            template: '#=AffiliateName# (<a href="/Admin/Affiliate/Edit/#=AffiliateId#">#=AffiliateEmail#</a>)'
                                        }, {
                                            field: "OrderStatus",
                                            title: "@T("Plugins.Widgets.BsAffiliate.AffiliateOrderModel.OrderStatus")",
                                            width: 120,
                                            template: "#=OrderStatusString#"
                                        }, {
                                            field: "OrderPaymentStatus",
                                            title: "@T("Plugins.Widgets.BsAffiliate.AffiliateOrderModel.OrderPaymentStatus")",
                                            width: 120,
                                            template: "#=OrderPaymentStatusString#"
                                        }, {
                                            field: "OrderTotal",
                                            title: "@T("Plugins.Widgets.BsAffiliate.AffiliateOrderModel.OrderTotal")",
                                            width: 200,
                                            template: "<span>#=OrderTotalString#</span>"
                                        }, {
                                            field: "AffiliateCommission",
                                            title: "@T("Plugins.Widgets.BsAffiliate.AffiliateOrderModel.CommissionRate")",
                                            width: 200,
                                            template: "<span>#=AffiliateCommissionString#</span>",
                                            footerTemplate: '<div><strong>Commission Summary</strong></div>' +
                                                                    '<div>Total <span id=\"aggregator-total\"></span></div>' +
                                                                    '<div>Paid <span id=\"aggregator-paid\"></span></div>' +
                                                                    '<div>Unpaid <span id=\"aggregator-unpaid\"></span></div>'
                                        }, {
                                            field: "CommissionPaymentStatus",
                                            title: "@T("Plugins.Widgets.BsAffiliate.AffiliateOrderModel.CommissionPaymentStatus")",
                                            width: 120,
                                            template: "<span>#=CommissionPaymentStatusString#</span>"
                                        }, {
                                            field: "MarkedAsPaidOnString",
                                            title: "@T("Plugins.Widgets.BsAffiliate.AffiliateOrderModel.MarkedAsPaidOn")",
                                            width: 100,
                                            type: "date",
                                            format: "{0:G}"
                                        },
                                        @if (ViewBag.CanManage)
                                        {
                                            <text>
                                        {
                                            field: "Id",
                                            title: "Mark As Paid",
                                            width: 120,
                                            template: '#if(OrderPaymentStatus==30 && CommissionPaymentStatus == 10){#<a href="/BsAffiliateConfigure/MarkAsPaid/#=Id#" onclick="return confirm(\'Are you sure want to mark as paid?\')" class="btn bg-blue">Mark As Paid</a>#}#'
                                        }
                                        </text>
                                            }
                                    ]
                                });

                                var reportAggregates = "";

                                function additionalData() {
                                    var data = {
                                        AffiliateFirstName: $('#@Html.FieldIdFor(model => model.AffiliateFirstName)').val(),
                                        AffiliateLastName: $('#@Html.FieldIdFor(model => model.AffiliateLastName)').val(),
                                        AffiliateEmail: $('#@Html.FieldIdFor(model => model.AffiliateEmail)').val(),
                                        OrderId: $('#@Html.FieldIdFor(model => model.OrderId)').val(),
                                        StoreId: $('#@Html.FieldIdFor(model => model.StoreId)').val(),
                                        StartDate: $('#@Html.FieldIdFor(model => model.StartDate)').val(),
                                        EndDate: $('#@Html.FieldIdFor(model => model.EndDate)').val(),
                                        OrderStatus: $('#@Html.FieldIdFor(model => model.OrderStatus)').val(),
                                        CommissionPaymentStatus: $('#@Html.FieldIdFor(model => model.CommissionPaymentStatus)').val(),
                                        OrderPaymentStatus: $('#@Html.FieldIdFor(model => model.OrderPaymentStatus)').val(),
                                        OrderStatus: $('#@Html.FieldIdFor(model => model.OrderStatus)').val()
                                    };
                                    addAntiForgeryToken(data);
                                    return data;
                                }


                                function onDataBound(e) {

                                    if (reportAggregates != "") {
                                        for (var key in reportAggregates) {
                                            $('#aggregator-total').text(reportAggregates['totalCommission']);
                                            $('#aggregator-paid').text(reportAggregates['paidCommission']);
                                            $('#aggregator-unpaid').text(reportAggregates['unpaidCommission']);
                                        }
                                    }
                                }

                                $('#btnSearch').click(function (e) {
                                    //search
                                    var grid = $('#commission-grid').data('kendoGrid');
                                    grid.dataSource.page(1); //new search. Set page size to 1

                                    e.preventDefault();
                                    return false;
                                });
                        });

                    </script>
                </div>
            </div>
        </div>
    </div>
</div>
