@model Nop.Plugin.Misc.HomePageProduct.Models.HomePageProductSubCategoryListModel
@using Nop.Core.Infrastructure
@using Nop.Web.Framework
@{
    var defaultGridPageSize = EngineContext.Current.Resolve<Nop.Core.Domain.Common.AdminAreaSettings>().DefaultGridPageSize;
    var gridPageSizes = EngineContext.Current.Resolve<Nop.Core.Domain.Common.AdminAreaSettings>().GridPageSizes;

    Layout = "~/Administration/Views/Shared/_AdminLayout.cshtml";
    //page title
    ViewBag.Title = T("Admin.Plugins.HomePageProduct").Text;
}

@Html.HiddenFor(model => model.CategoryId)
<a href="/Plugin/Misc//HomePageProduct/CategoryAdd">(Back to plugin main page)</a>
<table width="100%">
    <tr>
        <td class="adminTitle">
            Category Name:
        </td>
        <td class="adminData">
            @Html.TextBoxFor(model => model.CategoryName, new { @readonly = true })
        </td>
    </tr>

</table>
<table class="adminContent">
    <tr>
        <td>
            <div id="subcategory-grid"></div>

            <script>
                $(document).ready(function() {
                    $("#subcategory-grid").kendoGrid({
                        dataSource: {
                            type: "json",
                            transport: {
                                read: {
                                    url: "@Html.Raw(Url.Action("ListJsonSubCategory", "HomePageProduct", new { area = "" }))",
                                    type: "POST",
                                    dataType: "json",
                                    data: additionalData
                                },
                                update: {
                                    url: "@Html.Raw(Url.Action("HomePageSubCategoryUpdate", "HomePageProduct", new { categoryId = Model.CategoryId, area = "" }))",
                                    type: "POST",
                                    dataType: "json"
                                },

                                parameterMap: function(data, operation) {
                                    if (operation != "read") {
                                        //post the entities so the ASP.NET DefaultModelBinder will understand them:
                                        //products[0].Name="name"
                                        //products[0].Id = 1
                                        //products[1].Name="name"
                                        //products[1].Id = 1

                                        var result = {};

                                        for (var i = 0; i < data.models.length; i++) {
                                            var entity = data.models[i];

                                            for (var member in entity) {
                                                result["SubCategories[" + i + "]." + member] = entity[member];
                                            }
                                        }

                                        return result;
                                    } else {
                                        //return JSON.stringify(data);
                                        return data;
                                    }
                                }
                            },
                            schema: {
                                data: "Data",
                                total: "Total",
                                errors: "Errors",
                                model: {
                                    id: "Id",
                                    fields: {
                                        Id: { editable: false, type: "number" },
                                        Name: { editable: false, type: "string" },
                                        SubCategoryShowOnHomePage: { editable: true, type: "boolean" },
                                        Priority: { editable: true, type: "number" },
                                        TabName: { editable: true, type: "string" },
                                    }
                                }
                            },
                            error: function(e) {
                                display_kendoui_grid_error(e);
                                // Cancel the changes
                                this.cancelChanges();
                            },
                            //bulk editing
                            batch: true,
                            pageSize: @(defaultGridPageSize),
                            serverPaging: true,
                            serverFiltering: true,
                            serverSorting: true
                        },
                        pageable: {
                            refresh: true,
                            pageSizes: [@(gridPageSizes)]
                        },
                        toolbar: ["save", "cancel"],
                        editable: {
                            confirmation: false,
                            //bulk editing
                            mode: "incell"
                        },
                        scrollable: false,
                        columns: [
                            {
                                field: "Id",
                                title: "@T("Admin.Catalog.BulkEdit.Fields.SubCategoryName")",
                                template: '<a href="@Url.Content("~/Admin/Category/Edit/")#=Id#">#:Name#</a>'
                            },
                            {
                                field: "SubCategoryShowOnHomePage",
                                title: "@T("SubCategoryShowOnHomePage")",
                                width: 100
                            },
                            {
                                field: "Priority",
                                title: "@T("Priority")",
                                editor: function (container, options) {
                                    $('<input name="' + options.field + '"/>')
                                        .appendTo(container)
                                        .kendoNumericTextBox({
                                            format: "{0:n4}",
                                            decimals: 4
                                        });
                                },
                                //integer format
                                width: 150
                            },
                             {
                                 field: "TabName",
                                 title: "@T("TabName")",
                                //integer format
                                width: 150
                             },
                              {
                                  field: "Id",
                                  title: "@T("Add Subcategory Products")",
                                  template: '<a href="@Url.Content("/Plugin/Misc/HomePageProduct/List/")#=Id#">Add</a>'
                                }
                        ]
                    });
                });
            </script>

            <script type="text/javascript">

            function additionalData()
            {
                //return {
                //    CategoryId: $('#CategoryId').val()
                //};
        
                var data = {
                    CategoryId:$('#CategoryId').val()
                };
                addAntiForgeryToken(data);
                return data;
            }

            </script>
        </td>
    </tr>
</table>
