@model CustomerListModel
@using Nop.Core.Infrastructure
@using Nop.Plugin.Widgets.MobileLogin.Models;
@using Nop.Web.Framework
@{
    var defaultGridPageSize = EngineContext.Current.Resolve<Nop.Core.Domain.Common.AdminAreaSettings>().DefaultGridPageSize;
    var gridPageSizes = EngineContext.Current.Resolve<Nop.Core.Domain.Common.AdminAreaSettings>().GridPageSizes;

    Layout = "~/Administration/Views/Shared/_AdminLayout.cshtml";
    //page title
    ViewBag.Title = T("Admin.Customers.Customers").Text;
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="content-header clearfix">
        <h1 class="pull-left">
            @T("Admin.Customers.Customers")
        </h1>

    </div>

    <div class="content">
        <div class="form-horizontal">
            <div class="panel-group">
                <div class="panel panel-default panel-search">
                    <div class="panel-body">
                        <div class="row">
                            <div class="col-md-5">
                                <div class="form-group">
                                    <div class="col-md-4">
                                        @Html.NopLabelFor(model => model.SearchEmail)
                                    </div>
                                    <div class="col-md-8">
                                        @Html.NopEditorFor(model => model.SearchEmail)
                                    </div>
                                </div>
                                <div class="form-group">
                                    <div class="col-md-4">
                                        @Html.NopLabelFor(model => model.SearchName)
                                    </div>
                                    <div class="col-md-8">
                                        @Html.NopEditorFor(model => model.SearchName)
                                    </div>
                                </div>
                                <div class="form-group">
                                    <div class="col-md-4">
                                        @Html.NopLabelFor(model => model.SearchMobileNumber)
                                    </div>
                                    <div class="col-md-8">
                                        @Html.NopEditorFor(model => model.SearchMobileNumber)
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-7 col-md-offset-5">
                                <button type="button" id="search-customers" class="btn btn-primary btn-search">
                                    <i class="fa fa-search"></i>
                                    @T("Admin.Common.Search")
                                </button>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="panel panel-default">
                    <div class="panel-body">
                        <div id="customers-grid"></div>

                        <script>
                            $(document).ready(function() {
                                $("#customers-grid").kendoGrid({
                                    dataSource: {
                                        type: "json",
                                        transport: {
                                            read: {
                                                url: "@Html.Raw(Url.Action("MobileLoginCustomerList", "MobileLoginCustomer"))",
                                                type: "POST",
                                                dataType: "json",
                                                data: additionalData
                                            }
                                        },
                                        schema: {
                                            data: "Data",
                                            total: "Total",
                                            errors: "Errors"
                                        },
                                        error: function(e) {
                                            display_kendoui_grid_error(e);
                                            // Cancel the changes
                                            this.cancelChanges();
                                        },
                                        pageSize: @(defaultGridPageSize),
                                        serverPaging: true,
                                        serverFiltering: true,
                                        serverSorting: true
                                    },
                                    pageable: {
                                        refresh: true,
                                        pageSizes: [@(gridPageSizes)]
                                    },
                                    scrollable: false,
                                    dataBound: onDataBound,
                                    columns: [
                                        {
                                            field: "CustomerId",
                                            title: "Customer ID",
                                            width: 50
                                        }, {
                                            field: "CustomerRoleNames",
                                            title: "@T("Admin.Customers.Customers.Fields.CustomerRoles")",
                                            width: 100
                                        }, {
                                            field: "Email",
                                            title: "@T("Admin.Customers.Customers.Fields.Email")",
                                            width: 150
                                        },
                                        {
                                            field: "Name",
                                            title: "@T("Admin.Customers.Customers.Fields.FullName")",
                                            width: 150
                                        },
                                        {
                                            field: "MobileNumber",
                                            title: "@T("Admin.Customers.Customers.Fields.MobileNumber")",
                                            width: 150
                                        },
                                        {
                                            field: "CreatedOn",
                                            title: "@T("Admin.Customers.Customers.Fields.CreatedOn")",
                                            width: 200,
                                            type: "date",
                                            format: "{0:G}"
                                        }, {
                                            field: "CustomerId",
                                            title: "@T("Admin.Common.Edit")",
                                            width: 100,
                                            template: '<a href="Admin/Customer/Edit/#=CustomerId#">@T("Admin.Common.Edit")</a>'
                                        }
                                    ]
                                });
                            });
                        </script>

                        <script type="text/javascript">
                    var selectedIds = [];

                    $(document).ready(function() {
                        //search button
                        $('#search-customers').click(function() {
                            var grid = $('#customers-grid').data('kendoGrid');
                            grid.dataSource.page(1); //new search. Set page size to 1
                            //grid.dataSource.read(); we already loaded the grid above using "page" function
                            //clear selected checkboxes
                            $('.checkboxGroups').attr('checked', false).change();
                            selectedIds = [];
                            return false;
                        });

                        $("".concat("#@Html.FieldIdFor(model => model.SearchEmail),",
                            "#@Html.FieldIdFor(model => model.SearchName),",
                            "#@Html.FieldIdFor(model => model.SearchMobileNumber)")).keydown(function(event) {
                            if (event.keyCode === 13) {
                                $("#search-customers").click();
                                return false;
                            }
                        });

                        $('#mastercheckbox').click(function() {
                            $('.checkboxGroups').attr('checked', $(this).is(':checked')).change();
                        });

                        //wire up checkboxes.
                        $('#customers-grid').on('change', 'input[type=checkbox][id!=mastercheckbox]', function(e) {
                            var $check = $(this);
                            if ($check.is(":checked") == true) {
                                var checked = jQuery.inArray($check.val(), selectedIds);
                                if (checked == -1) {
                                    //add id to selectedIds.
                                    selectedIds.push($check.val());
                                }
                            } else {
                                var checked = jQuery.inArray($check.val(), selectedIds);
                                if (checked > -1) {
                                    //remove id from selectedIds.
                                    selectedIds = $.grep(selectedIds, function(item, index) {
                                        return item != $check.val();
                                    });
                                }
                            }
                            updateMasterCheckbox();
                        });
                    });

                    function onDataBound(e) {
                        $('#customers-grid input[type=checkbox][id!=mastercheckbox]').each(function() {
                            var currentId = $(this).val();
                            var checked = jQuery.inArray(currentId, selectedIds);
                            //set checked based on if current checkbox's value is in selectedIds.
                            $(this).attr('checked', checked > -1);
                        });

                        updateMasterCheckbox();
                    }

                    function updateMasterCheckbox() {
                        var numChkBoxes = $('#customers-grid input[type=checkbox][id!=mastercheckbox]').length;
                        var numChkBoxesChecked = $('#customers-grid input[type=checkbox][id!=mastercheckbox]:checked').length;
                        $('#mastercheckbox').attr('checked', numChkBoxes == numChkBoxesChecked && numChkBoxes > 0);
                    }

                    function additionalData() {
                        var data = {
                            SearchEmail: $('#@Html.FieldIdFor(model => model.SearchEmail)').val(),
                            SearchName: $('#@Html.FieldIdFor(model => model.SearchName)').val(),
                            SearchMobileNumber: $('#@Html.FieldIdFor(model => model.SearchMobileNumber)').val()
                        };
                        addAntiForgeryToken(data);
                        return data;
                    }
                        </script>
                    </div>
                </div>
            </div>
        </div>
    </div>
}