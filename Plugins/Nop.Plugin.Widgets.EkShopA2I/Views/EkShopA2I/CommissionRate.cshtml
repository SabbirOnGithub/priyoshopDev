@model Nop.Plugin.Widgets.EkShopA2I.Models.UdcCommissionRateModel
@using Nop.Web.Framework.Events;
@using Nop.Services.Events;
@using Nop.Core.Infrastructure;
@using Nop.Web.Framework;
@using Nop.Web.Framework.UI;


@{
    Layout = "~/Administration/Views/Shared/_AdminLayout.cshtml";

    ViewBag.Title = "Commission Rate";
    Html.SetActiveMenuItemSystemName("EkShopA2i Commission Rate");
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="content-header clearfix">
        <h1 class="pull-left">
            Commission Rate
        </h1>
    </div>

    <div class="content">
        <div class="form-horizontal">
            <div id="ekshop-discount-rate" class="nav-tabs-custom">
                <ul class="nav nav-tabs">
                    @Html.RenderBootstrapTabHeader("tab-vendor", @T("Plugin.Ekshop.CommissionRate.Tab.VendorCommission"), true)
                    @Html.RenderBootstrapTabHeader("tab-category", @T("Plugin.Ekshop.CommissionRate.Tab.CategoryCommission"))
                </ul>
                <div class="tab-content">
                    @Html.RenderBootstrapTabContent("tab-vendor", @TabVendor(), true)
                    @Html.RenderBootstrapTabContent("tab-category", @TabCategory())
                </div>
            </div>
        </div>
    </div>
}

@{
    //custom tabs
    var eventMessage = new AdminTabStripCreated(this.Html, "ekshop-discount-rate");
    EngineContext.Current.Resolve<IEventPublisher>().Publish(eventMessage);
    foreach (var eventBlock in eventMessage.BlocksToRender)
    {
        @eventBlock
    }
}

@*save selected tab name*@
<input type="hidden" id="selected-tab-name" name="selected-tab-name" value="@(Html.GetSelectedTabName())">

@helper TabVendor()
{
    <div class="panel-group">
        <div class="panel panel-default">
            <div class="panel-body">
                <div class="form-group">
                    <div class="col-md-3">
                        @Html.NopLabelFor(model => model.SearchVendorName)
                    </div>
                    <div class="col-md-9">
                        @Html.NopEditorFor(model => model.SearchVendorName)
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-9 col-md-offset-3">
                        <button type="button" id="search-vendors" class="btn btn-primary btn-search">
                            <i class="fa fa-search"></i>
                            @T("Admin.Common.Search")
                        </button>
                    </div>
                </div>
            </div>
        </div>

        <div class="panel panel-default">
            <div class="panel-body">
                <div id="vendor-rates-grid"></div>

                <script>
                    $(document).ready(function() {
                        $("#vendor-rates-grid").kendoGrid({
                            dataSource: {
                                type: "json",
                                transport: {
                                    read: {
                                        url: "/EkshopA2i/VendorCommissionRateList",
                                        type: "POST",
                                        dataType: "json",
                                        data: additionalVendorData
                                    },
                                    update: {
                                        url: "/EkshopA2i/UpdateCommissionRate",
                                        type: "POST",
                                        dataType: "json",
                                        data: addAntiForgeryToken
                                    },
                                    destroy: {
                                        url: "/EkshopA2i/DeleteCommissionRate",
                                        type: "POST",
                                        dataType: "json",
                                        data: addAntiForgeryToken
                                    }
                                },
                                schema: {
                                    data: "Data",
                                    total: "Total",
                                    errors: "Errors",
                                    model: {
                                        id: "EntityId",
                                        fields: {
                                            EntityName: { editable: false, type: "string" },
                                            EntityActive: { editable: false, type: "boolean" },
                                            CommissionRate: { editable: true, type: "number" },
                                            EntityId: { editable: false, type: "number" }
                                        }
                                    }
                                },
                                requestEnd: function (e) {
                                    if (e.type == "create" || e.type == "update" || e.type == "destroy") {
                                        this.read();
                                    }
                                },
                                error: function(e) {
                                    display_kendoui_grid_error(e);
                                    this.cancelChanges();
                                },
                                pageSize: 15,
                                serverPaging: true,
                                serverFiltering: true,
                                serverSorting: true
                            },
                            pageable: {
                                refresh: true,
                                pageSizes: [15, 25, 50, 100]
                            },
                            editable: {
                                confirmation: "@T("Admin.Common.DeleteConfirmation")",
                                mode: "inline"
                            },
                            scrollable: false,
                            columns: [
                                {
                                    field: "EntityName",
                                    title: "Vendor Name",
                                    width: 300
                                }, {
                                    field: "CommissionRate",
                                    title: "Commission Rate (%)",
                                    width: 200,
                                    template: '# if(MappedCommissionRate) {# #:CommissionRate#% #} else {# <mark>Not set</mark> #}   #'
                                }, {
                                    field: "EntityActive",
                                    title: "Active",
                                    width: 150,
                                    template: '# if(EntityActive) {# <i class="fa fa-check true-icon"></i> #} else {# <i class="fa fa-close false-icon"></i> #} #'
                                }
                                @if (Model.CanManageCommission)
                                {
                                    <text>
                                    , {
                                        command: [
                                            {
                                                name: "edit",
                                                text: {
                                                    edit: "@T("Admin.Common.Edit")",
                                                    update: "@T("Admin.Common.Update")",
                                                    cancel: "@T("Admin.Common.Cancel")"
                                                }
                                            }, {
                                                name: "destroy",
                                                text: "@T("Admin.Common.Delete")"
                                            }
                                        ],
                                        width: 200
                                    }
                                    </text>
                                }
                            ]
                        });
                    });
                </script>

                <script>
                    $(document).ready(function () {
                        $('#search-vendors').click(function () {
                            var grid = $('#vendor-rates-grid').data('kendoGrid');
                            grid.dataSource.page(1);
                            return false;
                        });
                    });

                    function additionalVendorData() {
                        var data = {
                            SearchVendorName: $('#@Html.FieldIdFor(model => model.SearchVendorName)').val()
                        };
                        addAntiForgeryToken(data);
                        return data;
                    }
                </script>
            </div>
        </div>
    </div>

}




@helper TabCategory()
{
    <div class="panel-group">
        <div class="panel panel-default">
            <div class="panel-body">
                <div class="form-group">
                    <div class="col-md-3">
                        @Html.NopLabelFor(model => model.SearchCategoryName)
                    </div>
                    <div class="col-md-9">
                        @Html.NopEditorFor(model => model.SearchCategoryName)
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-9 col-md-offset-3">
                        <button type="button" id="search-categories" class="btn btn-primary btn-search">
                            <i class="fa fa-search"></i>
                            @T("Admin.Common.Search")
                        </button>
                    </div>
                </div>
            </div>
        </div>

        <div class="panel panel-default">
            <div class="panel-body">
                <div id="category-rates-grid"></div>

                <script>
                    $(document).ready(function() {
                        $("#category-rates-grid").kendoGrid({
                            dataSource: {
                                type: "json",
                                transport: {
                                    read: {
                                        url: "/EkshopA2i/CategoryCommissionRateList",
                                        type: "POST",
                                        dataType: "json",
                                        data: additionalCategoryData
                                    },
                                    update: {
                                        url: "/EkshopA2i/UpdateCommissionRate",
                                        type: "POST",
                                        dataType: "json",
                                        data: addAntiForgeryToken
                                    },
                                    destroy: {
                                        url: "/EkshopA2i/DeleteCommissionRate",
                                        type: "POST",
                                        dataType: "json",
                                        data: addAntiForgeryToken
                                    }
                                },
                                schema: {
                                    data: "Data",
                                    total: "Total",
                                    errors: "Errors",
                                    model: {
                                        id: "EntityId",
                                        fields: {
                                            EntityName: { editable: false, type: "string" },
                                            EntityActive: { editable: false, type: "boolean" },
                                            CommissionRate: { editable: true, type: "number" },
                                            EntityId: { editable: false, type: "number" }
                                        }
                                    }
                                },
                                requestEnd: function (e) {
                                    if (e.type == "create" || e.type == "update" || e.type == "destroy") {
                                        this.read();
                                    }
                                },
                                error: function(e) {
                                    display_kendoui_grid_error(e);
                                    this.cancelChanges();
                                },
                                pageSize: 15,
                                serverPaging: true,
                                serverFiltering: true,
                                serverSorting: true
                            },
                            pageable: {
                                refresh: true,
                                pageSizes: [15, 25, 50, 100]
                            },
                            editable: {
                                confirmation: "@T("Admin.Common.DeleteConfirmation")",
                                mode: "inline"
                            },
                            scrollable: false,
                            columns: [
                                {
                                    field: "EntityName",
                                    title: "Category Name",
                                    width: 300
                                }, {
                                    field: "CommissionRate",
                                    title: "Commission Rate (%)",
                                    width: 200,
                                    template: '# if(MappedCommissionRate) {# #:CommissionRate#% #} else {# <mark>Not set</mark> #}   #'
                                }, {
                                    field: "EntityActive",
                                    title: "Active",
                                    width: 150,
                                    template: '# if(EntityActive) {# <i class="fa fa-check true-icon"></i> #} else {# <i class="fa fa-close false-icon"></i> #} #'
                                }
                                @if (Model.CanManageCommission)
                                {
                                    <text>
                                    , {
                                        command: [
                                            {
                                                name: "edit",
                                                text: {
                                                    edit: "@T("Admin.Common.Edit")",
                                                    update: "@T("Admin.Common.Update")",
                                                    cancel: "@T("Admin.Common.Cancel")"
                                                }
                                            }, {
                                                name: "destroy",
                                                text: "@T("Admin.Common.Delete")"
                                            }
                                        ],
                                        width: 200
                                    }
                                    </text>
                                }
                            ]
                        });
                    });
                </script>

                <script>
                    $(document).ready(function () {
                        $('#search-categories').click(function () {
                            var grid = $('#category-rates-grid').data('kendoGrid');
                            grid.dataSource.page(1);
                            return false;
                        });
                    });

                    function additionalCategoryData() {
                        var data = {
                            SearchCategoryName: $('#@Html.FieldIdFor(model => model.SearchCategoryName)').val()
                        };
                        addAntiForgeryToken(data);
                        return data;
                    }
                </script>
            </div>
        </div>
    </div>
}

