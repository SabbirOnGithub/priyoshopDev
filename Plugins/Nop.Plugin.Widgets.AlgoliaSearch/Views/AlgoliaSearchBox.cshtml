@using Nop.Plugin.Widgets.AlgoliaSearch.Models
@using Nop.Core.Infrastructure
@using Nop.Core
@model ConfigureModel

@{ 
    var webHelper = EngineContext.Current.Resolve<IWebHelper>();
    var q = webHelper.QueryString<string>("q");
}

<style>
    #small-searchterms {
        display: none;
    }

    .search-image {
        width: 75px;
        height: 60px;
    }

    /*Algolia*/

    .ais-search-box {
        max-width: unset !important;
    }

    .ais-hits {
        border-top: 1px solid #ddd;
    }

    .header .form-search {
        padding-right: 0 !important;
    }

    #hits .hit {
        position: relative;
    }

    .hit .hit-image {
        margin-right: 7px;
        text-align: center;
        display: inline-block;
        vertical-align: middle;
    }

        .hit .hit-image a {
            width: 100%;
            height: 100%;
            font-size: 0;
            line-height: 0;
            display: inline-block;
        }

        .hit .hit-image img {
            width: 60px;
            height: auto;
            max-width: 100%;
            max-height: 100%;
        }

    .hit .hit-content {
        display: inline-block;
        width: calc(100% - 80px);
        text-align: left;
        vertical-align: middle;
    }

    h2.hit-name {
        margin: 0 auto;
        font-size: 14px;
        font-weight: 500;
        line-height: 14px;
    }

    .ais-hits--item, .ais-hits.ais-hits__empty {
        padding: 1px 3px;
        border-bottom: 1px solid #ddd;
    }

    #search-result em {
        color: #00AEEF;
        font-weight: 600;
        font-style: normal;
    }

    a.ais-menu--link {
        color: #000;
        display: block;
        font-size: 15px;
    }

        a.ais-menu--link span {
            width: auto;
            height: 18px;
            float: right;
            color: #828282;
            font-size: 14px;
            text-align: center;
            display: inline-block;
        }

    .ais-search-box--magnifier-wrapper {
        display: none;
    }

    span.hit-price {
        color: #000;
        font-weight: 600;
    }

    span.hit-old-price {
        opacity: 0.8;
        text-decoration: line-through;
        margin-left: 7px;
    }

    p.hit-description {
        display: none;
        overflow: hidden;
        margin-bottom: 5px;
        white-space: nowrap;
        text-overflow: ellipsis;
    }

    .ais-menu--item.ais-menu--item__active a {
        color: #000;
        font-weight: 600;
    }

    .ais-hits--item:hover, .ais-menu--item:hover {
        background-color: #efefef;
    }

    .ais-hits.ais-hits__empty {
        padding: 1px 3px 1px 11px;
        border-top: 1px solid #ddd;
        height: 31px;
        font-size: 14px;
        line-height: 26px;
        text-align: left;
    }

    #search-result {
        top: 100%;
        width: calc(100% - 10px);
        border-top: 0;
        z-index: 10000;
        background: white;
        position: absolute;
        box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.4);
        margin: 0 5px;
    }

    .cat-in {
        float: left;
        margin-right: 5px;
        font-size: 14px;
    }

    .ais-search-box {
        width: auto !important;
        float: left;
    }

    .hit-content {
        font-size: 14px;
    }

    .hit-prices {
        margin-top: 3px
    }

    .ais-search-box--reset-wrapper {
        display: none !important
    }
</style>

@*
    <script type="text/html" id="hit-template">
        <a href="/{{SeName}}" class="search-item">
            <div class="hit">
                <div class="hit-image">
                    <img src="{{AutoCompleteImageUrl}}" alt="{{Name}}">
                </div>
                <div class="hit-content">
                    <h2 class="hit-name">{{{_highlightResult.Name.value}}}</h2>
                    <div class="hit-prices">
                        <span class="hit-price">{{ProductPrice.Price}}</span>
                        <span class="hit-old-price">{{ProductPrice.OldPrice}}</span>
                    </div>
                </div>
            </div>
        </a>
    </script>*@

<form method="get" id="small-search-box-algolio-form" class="form-search" action="/src">
    <input type="text" id="search-input" class="search-box-text" autocomplete="off" name="q" value="@q" placeholder="Search for products" />
    <input type="submit" class="button-1 search-box-button" value="@T(" Search.Button")" />

    <main id="search-result">
        <div id="hits"></div>
    </main>

    <script src="~/Plugins/Widgets.AlgoliaSearch/Scripts/algoliasearch.min.js"></script>
    @*<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/instantsearch.js@2.3/dist/instantsearch.min.css">
        <script src="https://cdn.jsdelivr.net/npm/instantsearch.js@2.3/dist/instantsearch.min.js"></script>*@

    @*<script>
        const client = algoliasearch('@Model.ApplicationId', '@Model.SeachOnlyKey');
        const index = client.initIndex('Products');

        $('#search-input').on('input propertychange paste', function () {
            //debugger;
            var query = $('#search-input').val();
            if (query.length >= 2) {
                index.search({
                    query: query,
                    hitsPerPage: 5,
                },
                    function searchDone(err, content) {
                        if (err) throw err;

                        if (content.hits.length > 0) {
                            var model = {};
                            model.searchBoxModels = content.hits;

                            var html = '';

                            $.ajax({
                                type: "POST",
                                data: JSON.stringify(model),
                                contentType: 'application/json; charset=utf-8',
                                url: '/Algolia/SearchBoxData',
                                success: function (response) {
                                    if (response.Status) {

                                        html += '<div class="ais-hits">';
                                        $.each(response.Data, function (i, item) {

                                            html += '<div class="ais-hits--item"><a href="/' + item.SeName + '" class="search-item">' +
                                                '<div class="hit">' +
                                                '<div class="hit-image">' +
                                                '<img src="' + item.AutoCompleteImageUrl + '" alt="' + item.Name + '">' +
                                                '</div>' +
                                                '<div class="hit-content">' +
                                                '<h2 class="hit-name">' + item._highlightResult.Name.Value + '</h2>' +
                                                '<div class="hit-prices">' +
                                                '<span class="hit-price">' + item.ProductPrice.Price + '</span>';

                                            if (item.ProductPrice.OldPrice != null && item.ProductPrice.OldPrice.length > 0) {
                                                html += '<span class="hit-old-price">' + item.ProductPrice.OldPrice + '</span>';
                                            }

                                            html += '</div></div></div></a></div>';
                                        });
                                        html += '</div>'
                                    }

                                    $('#hits').html(html);
                                }
                            });
                        }
                        else {
                            var html = '<div class="ais-hits ais-hits__empty">We didn\'t find any results for the search <em> " ' + query + ' "</em></div >';
                            $('#hits').html(html);
                        }
                    }
                );
            }
            else {
                $('#hits').html('');
            }
        });


        $(document).mouseup(function (e) {
            var container = $('#small-search-box-algolio-form');

            if (!container.is(e.target) && container.has(e.target).length === 0) {
                $('#search-result').hide();
            }
            else {
                $('#search-result').show();
            }
        });




        // only query string

        // with params
        //index.search(
        //    {
        //        query: 'query string',
        //        attributesToRetrieve: ['firstname', 'lastname'],
        //        hitsPerPage: 50,
        //    },
        //    function searchDone(err, content) {
        //        if (err) throw err;

        //        console.log(content.hits);
        //    }
        //);

        //var search = instantsearch({
        //    appId: '@Model.ApplicationId',
        //    apiKey: '@Model.SeachOnlyKey',
        //    indexName: 'Products',
        //    urlSync: false,
        //    searchParameters: {
        //        hitsPerPage: 5
        //    },
        //    searchFunction(helper) {
        //        if (helper.state.query.length <= 1) {
        //            $('#hits').html('');
        //            return;
        //        }

        //        helper.search();
        //    }
        //});

        //const autocomplete = instantsearch.connectors.connectAutocomplete(
        //    ({ indices, refine, widgetParams }, isFirstRendering) => {
        //        // We get the onSelectChange callback from the widget params
        //        const { container, onSelectChange } = widgetParams;

        //        if (isFirstRendering) {
        //            container.html('<select id="ais-autocomplete"></select>');

        //            container.find('select').selectize({
        //                // ...
        //                onType: refine,
        //                onChange(value) {
        //                    // We call the provided callback each time a value is selected
        //                    onSelectChange(value);
        //                    refine(value);
        //                },
        //            });

        //            return;
        //        }

        //        // ...
        //    }
        //);

        //const suggestions = instantsearch({
        //    // Replace with your own values
        //    appId: '@Model.ApplicationId',
        //    apiKey: '@Model.SeachOnlyKey', // search only API key, no ADMIN key
        //    indexName: 'Products',
        //    urlSync: false,
        //    searchParameters: {
        //        hitsPerPage: 5
        //    }
        //});

        //suggestions.addWidget(
        //    autocomplete({
        //        container: $('#autocomplete'),
        //        onSelectChange(value) {
        //            console.log(value)
        //        },
        //    })
        //);

        //var search = instantsearch({
        //    // Replace with your own values
        //    appId: '@Model.ApplicationId',
        //    apiKey: '@Model.SeachOnlyKey', // search only API key, no ADMIN key
        //    indexName: 'Products',
        //    urlSync: false,
        //    searchParameters: {
        //        hitsPerPage: 5
        //    },
        //    searchFunction(helper) {
        //        if (helper.state.query.length <= 1) {
        //            $('#hits').html('');
        //            $('#categories').html('');
        //            return;
        //        }

        //        helper.search();
        //    }
        //});
        //search.addWidget(
        //    instantsearch.widgets.searchBox({
        //        container: '#search-input',
        //        minLength:2
        //    })
        //);
        //search.addWidget(
        //    instantsearch.widgets.hits({
        //        container: '#hits',
        //        templates: {
        //            item: document.getElementById('hit-template').innerHTML,
        //            empty: "We didn't find any results for the search <em>\"{{query}}\"</em>"
        //        }
        //    })
        //);

        //const customMenuRenderFn = function (renderParams, isFirstRendering) {
        //    const items = renderParams.items;
        //    console.log(renderParams)
        //    if (items.length > 0) {
        //        var text = $('#search-input').val();

        //        $('#categories').html(
        //            '<div><div class="ais-root ais-menu"><div class="ais-menu--header ais-header">Categories</div>' +
        //            '<div class="ais-body ais-menu--body"><div class="ais-menu--list" id="cat-list"></div></div></div></div>'
        //        );

        //        const optionsHTML = items.map(item => {
        //            var keys = item.value.split('--');
        //            return (
        //                `<div class="ais-menu--item"><div><span class="cat-in"><em>${text}</em> in </span> <a class="ais-menu--link" href="/src/${keys[1]}?q=${text}">${keys[0]} <span class="ais-menu--count">${item.count} results<span> </a></div></div>`
        //            );
        //        });
        //        $('#cat-list').html(optionsHTML);
        //    }
        //    else {
        //        $('#categories').html('');
        //    }
        //};

        //const dropdownMenu = instantsearch.connectors.connectMenu(customMenuRenderFn);

        //search.addWidget(
        //    dropdownMenu({
        //        container: '#hit-products',
        //        attributeName: 'Sku',
        //        limit: 5
        //    })
        //);
        //search.start();

    </script>*@
</form>

