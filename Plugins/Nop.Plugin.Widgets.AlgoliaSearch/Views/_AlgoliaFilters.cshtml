@model Nop.Plugin.Widgets.AlgoliaSearch.Models.AlgoliaSearchModel
@using Nop.Web.Extensions;
@using Nop.Core.Infrastructure
@using Nop.Core

@{
    int new_i = 0;
    var webHelper = EngineContext.Current.Resolve<IWebHelper>();
    var currentPageUrl = webHelper.GetThisPageUrl(true);
    currentPageUrl = webHelper.RemoveQueryString(currentPageUrl, "maxPrice");
    currentPageUrl = webHelper.RemoveQueryString(currentPageUrl, "minPrice");
    currentPageUrl = webHelper.RemoveQueryString(currentPageUrl, "pagenumber");
}

<style>
    .price-range-slider-container {
        padding: 0 5px;
    }

    .range-max, .price-input.cmax {
        float: right;
    }

    .price-input {
        margin-top: 5px;
        width: 60px;
        text-align: center;
    }

    .ui-slider-horizontal .ui-slider-handle {
        margin-left: -8px !important;
    }

    .dvFilterByCategory input[type="checkbox"] {
        display: none;
    }

        .dvFilterByCategory input[type="checkbox"] + label {
            position: relative;
            padding-left: 20px;
            display: block;
        }

            .dvFilterByCategory input[type="checkbox"] + label::before {
                content: "";
                position: absolute;
                top: 10px;
                left: 0;
                width: 12px;
                height: 12px;
                margin: -6px 0 0;
                border: 1px solid #ddd;
            }

        .dvFilterByCategory input[type="checkbox"]:checked + label::before {
            background: url(/Plugins/Widgets.AlgoliaSearch/Content/Images/selected.png) no-repeat center;
        }

    .dvFilterByCategory .ui-slider {
        position: relative;
        width: auto;
        height: 3px;
        margin: 15px 4px 15px;
        background-color: #ececec;
    }

    .dvFilterByCategory .ui-slider-range {
        position: absolute;
        height: 3px;
        background-color: #f74258;
    }

    .dvFilterByCategory .ui-slider-handle {
        position: absolute;
        top: -5px;
        width: 8px;
        height: 15px;
        margin-left: -4px;
        outline: 2px solid #fff;
        background: #f74258 url(/Plugins/Widgets.AlgoliaSearch/Content/Images/handle.png) bottom no-repeat;
        color: inherit;
        cursor: pointer;
    }

    .dvFilterByCategory .price-input {
        border: none;
        color: #777;
    }

    .dvFilterByCategory .search-filter-input {
        display: block;
        width: 100%;
    }
</style>

<script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js" integrity="sha256-T0Vest3yCU7pafRw9r+settMBX6JkKN06dqBnpQ8d30=" crossorigin="anonymous"></script>

<div class="widget dvFilterByCategory">
    <form id="search-form">
        <input type="hidden" value="@Model.q" name="q" />

        @if (Model.PagingFilteringContext.AllowPriceRangeFilter)
        {
            <div class="block">
                <div class="title accordion-title expand">
                    <strong>@T("Filtering.PriceRangeFilter")</strong>
                </div>
                <div class="listbox" id="accordian-price">
                    <p id="amount">
                        <span class="range-min">@Model.PagingFilteringContext.PriceRange.CurrencySymbol @Model.PagingFilteringContext.PriceRange.MinPrice</span>
                        <span class="range-max">@Model.PagingFilteringContext.PriceRange.CurrencySymbol @Model.PagingFilteringContext.PriceRange.MaxPrice</span>
                    </p>
                    <div class="price-range-slider-container">
                        <div id="slider-range"></div>
                    </div>

                    <input id="currentMin" class="price-input cmin" value="@Model.PagingFilteringContext.PriceRange.CurrentMinPrice">
                    <input id="currentMax" class="price-input cmax" value="@Model.PagingFilteringContext.PriceRange.CurrentMaxPrice">

                    <input type="hidden" id="min" value="@Model.PagingFilteringContext.PriceRange.MinPrice">
                    <input type="hidden" id="max" value="@Model.PagingFilteringContext.PriceRange.MaxPrice">
                </div>
            </div>

            <script type="text/javascript">
                function changeUrl() {
                    var url = '@Html.Raw(currentPageUrl)'

                    var cmin = parseInt($('#currentMin').val());
                    var cmax = parseInt($('#currentMax').val());
                    var min = parseInt($('#min').val());
                    var max = parseInt($('#max').val());

                    if (cmin != min)
                        url += '&minPrice=' + cmin;
                    if (cmax != max)
                        url += '&maxPrice=' + cmax;

                    window.location = url;
                }

                $(function () {
                    $('.price-input').on("change", function () {
                        changeUrl();
                    });

                    $("#slider-range").slider({
                        range: true,
                        min: @Model.PagingFilteringContext.PriceRange.MinPrice,
                        max: @Model.PagingFilteringContext.PriceRange.MaxPrice,
                        values: [@Model.PagingFilteringContext.PriceRange.CurrentMinPrice, @Model.PagingFilteringContext.PriceRange.CurrentMaxPrice],
                        slide: function (event, ui) {
                            $("#currentMin").val(ui.values[0]);
                            $("#currentMax").val(ui.values[1]);
                        },
                        change: function (event, ui) {
                            changeUrl();
                        }
                    });
                });
            </script>
        }

        @if (Model.PagingFilteringContext.AllowCategoryFilter && Model.PagingFilteringContext.AvailableCategories.Any())
        {
            <div class="block block-category-navigation">
                <div class="title accordion-title expand">
                    <strong>
                        @T("Filtering.CategoryFilter")
                    </strong>
                </div>
                <div class="listbox" id="accordian-cat">
                    <ul class="list">
                        @{
                            foreach (var item in Model.PagingFilteringContext.AvailableCategories.OrderByDescending(x => x.Selected))
                            {
                                <li>
                                    <input id="filter_checkbox_@item.Value" type="checkbox" data-val="@item.Text" name="cat" @(item.Selected ? "checked=\" checked\"" : "") class="checkboxCategoryfilter submit-input" value="@item.Value" />
                                    <label for="filter_checkbox_@item.Value">@item.Text (@item.Count)</label>
                                </li>
                            }
                        }
                    </ul>
                </div>
            </div>
        }

        @if (Model.PagingFilteringContext.AllowManufacturerFilter && Model.PagingFilteringContext.AvailableManufacturers.Any())
        {
            <div class="block">
                <div class="title accordion-title expand">
                    <strong>
                        @T("Filtering.ManufacturerFilter")
                    </strong>
                </div>
                <div class="listbox" id="accordian-manf">
                    <ul class="list">
                        @{
                            foreach (var item in Model.PagingFilteringContext.AvailableManufacturers.OrderByDescending(x => x.Selected))
                            {
                                <li>
                                    <input id="filter_checkbox_@item.Value" type="checkbox" data-val="@item.Text" name="manf" @(item.Selected ? "checked=\" checked\"" : "") class="checkboxCategoryfilter submit-input" value="@item.Value" />
                                    <label for="filter_checkbox_@item.Value">@item.Text (@item.Count)</label>
                                </li>
                            }
                        }
                    </ul>
                </div>
            </div>
        }

        @if (Model.PagingFilteringContext.AllowVendorFilter && Model.PagingFilteringContext.AvailableVendors.Any())
        {
            <div class="block">
                <div class="title accordion-title expand">
                    <strong>@T("Filtering.VendorFilter")</strong>
                </div>
                <div class="listbox" id="accordian-vendor">
                    <ul class="list">
                        @{
                            foreach (var item in Model.PagingFilteringContext.AvailableVendors.OrderByDescending(x => x.Selected))
                            {
                                <li>
                                    <input id="filter_checkbox_@item.Value" type="checkbox" data-val="@item.Text" name="vend" @(item.Selected ? "checked=\" checked\"" : "") class="checkboxCategoryfilter submit-input" value="@item.Value" />
                                    <label for="filter_checkbox_@item.Value">@item.Text (@item.Count)</label>
                                </li>
                            }
                        }
                    </ul>
                </div>
            </div>
        }

        @if (Model.PagingFilteringContext.AllowRatingFilter && Model.PagingFilteringContext.AvailableRatings.Any())
        {
            <div class="block">
                <div class="title accordion-title expand">
                    <strong>@T("Filtering.RatingFilter")</strong>
                </div>
                <div class="listbox" id="accordian-rating">
                    <ul class="list">
                        @{
                            foreach (var item in Model.PagingFilteringContext.AvailableRatings.OrderByDescending(x => x.Selected))
                            {
                                <li>
                                    <input id="filter_checkbox_@item.Value" type="checkbox" name="rate" @(item.Selected ? "checked=\" checked\"" : "") class="checkboxCategoryfilter submit-input" value="@item.Value" />
                                    <label for="filter_checkbox_@item.Value">@item.Text (@item.Count)</label>
                                </li>
                            }
                        }
                    </ul>
                </div>
            </div>
        }

        @if (Model.PagingFilteringContext.AllowSpecificationFilter && Model.PagingFilteringContext.AvailableSpecifications.Any())
        {
            <div class="dvfilterbyAttributes category-products" id="accordian-@new_i">
                @foreach (var group in Model.PagingFilteringContext.AvailableSpecifications.GroupBy(x => x.GroupName))
                {
                    <div class="block">
                        <div class="title accordion-title expand">
                            <strong>
                                @group.Key
                            </strong>
                        </div>
                        <div id="filter-accordion-@new_i" class="listbox">
                            <ul class="list">
                                @{
                                    foreach (var item in group.OrderByDescending(x => x.Selected))
                                    {
                                        <li>
                                            <input id="filter_checkbox_@item.Value" type="checkbox" name="specs_@group.Key" data-val="@item.Text" @(item.Selected ? "checked=\" checked\"" : "") class="checkboxCategoryfilter submit-input" value="@item.Value" />
                                            <label for="filter_checkbox_@item.Value">@item.Text (@item.Count)</label>
                                        </li>
                                    }
                                }
                            </ul>
                        </div>
                    </div>
                }
            </div>
        }

        @if (Model.PagingFilteringContext.AllowEmiFilter)
        {
            <div class="block">
                <div class="title accordion-title expand">
                    <strong>
                        @T("Filtering.EmiFilter")
                    </strong>
                </div>
                <div class="listbox" id="accordian-emi">
                    <ul class="list">
                        <li>
                            <input id="filter_checkbox_emi" type="checkbox" name="emi" @(Model.PagingFilteringContext.EmiProductOnly ? "checked=\" checked\"" : "") class="checkboxCategoryfilter submit-input" value="@Model.PagingFilteringContext.EmiUrl" />
                            <label for="filter_checkbox_emi">Emi Availabile Only</label>
                        </li>
                    </ul>
                </div>
            </div>
        }
    </form>
</div>

<script>
    $(function () {
        $(".block .title").on("click", function () {
            $(this).toggleClass("expand");
        });
    });
</script>
