@model Nop.Web.Models.Catalog.AdvanceSearchPagingFilteringModel

@if (Model.AllowProductViewModeChanging || Model.AllowProductSorting || Model.AllowCustomersToSelectPageSize)
{
<div class="product-selectors">
    @*view mode*@
    @if (Model.AllowProductViewModeChanging)
    {
        <div class="product-viewmode">
            <span>@T("Catalog.ViewMode")</span>
            @if (Model.AvailableViewModes.Count > 1)
            {
                var gridMode = Model.AvailableViewModes[0];
                var listMode = Model.AvailableViewModes[1];

                <a class="viewmode-icon grid @if (gridMode.Selected) {<text>selected</text>}" href="@gridMode.Value" title="@gridMode.Text">@gridMode.Text</a>
                <a class="viewmode-icon list @if (listMode.Selected) {<text>selected</text>}" href="@listMode.Value" title="@listMode.Text">@listMode.Text</a>
            }
        </div>
    }
    @if (Model.AllowProductSorting)
    {
        <div class="product-sorting">
            <span>@T("Catalog.OrderBy")</span>
            @Html.DropDownList("orderby", Model.AvailableSortOptions, new { @class = "submit-input", id = "orderby" })
        </div>
    }
    @*page size*@
    @if (Model.AllowCustomersToSelectPageSize && Model.PageSizeOptions.Any())
    {
        <div class="product-page-size">
            <span>@T("Catalog.PageSize")</span>
            @Html.DropDownList("pagesize", Model.PageSizeOptions, new { @class = "submit-input", id = "pageSize" })
            <span>@T("Catalog.PageSize.PerPage")</span>
        </div>
    }
</div>
}
<script>
    $(document).ready(function() {
        $('.submit-input').change(function () {
            window.location = $(this).val();
        });
    });
</script>
