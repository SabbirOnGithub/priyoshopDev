@model Nop.Plugin.Widgets.AlgoliaSearch.Models.AlgoliaSynonymModel
@using Nop.Core.Domain.Common
@using Nop.Web.Framework.UI
@using Nop.Web.Framework
@using Nop.Core.Infrastructure

@{
    var defaultGridPageSize = EngineContext.Current.Resolve<Nop.Core.Domain.Common.AdminAreaSettings>().DefaultGridPageSize;
    var gridPageSizes = EngineContext.Current.Resolve<Nop.Core.Domain.Common.AdminAreaSettings>().GridPageSizes;

    Layout = "_AdminLayout";
    ViewBag.Title = "Algolia Synonyms";
    Html.SetActiveMenuItemSystemName("AlgoliaAdmin.Synonyms");
}

<style>
    .k-input.k-textbox {
        width: 500px !important;
    }
</style>

@Html.AntiForgeryToken()
<div class="content-header clearfix">
    <h1 class="pull-left">
        Algolia Synonyms
    </h1>
    <div class="pull-right">
        &nbsp;
    </div>
</div>

<div class="content">
    <div class="form-horizontal">
        <div class="panel-group">
            <div class="panel panel-default panel-search">
                <div class="panel-body">
                    <div class="row">
                        <div class="col-md-6">
                            <div class="form-group">
                                <div class="col-md-4">
                                    @Html.NopLabelFor(model => model.Synonyms)
                                </div>
                                <div class="col-md-8">
                                    @Html.NopEditorFor(model => model.Synonyms)
                                </div>
                            </div>
                            <div class="form-group">
                                <div class="col-md-8 col-md-offset-4">
                                    <button type="button" id="search-settings" class="btn btn-primary btn-search">
                                        <i class="fa fa-search"></i>
                                        @T("Admin.Common.Search")
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="panel panel-default">
                <div class="panel-body">
                    <em>[Note] Synonym add, update or delete operation may took longer time.</em>
                    <div id="settings-grid"></div>

                    <script>
                        $(document).ready(function () {
                            $("#settings-grid").kendoGrid({
                                dataSource: {
                                    type: "json",
                                    transport: {
                                        read: {
                                            url: "@Html.Raw(Url.Action("SynonymList", "AlgoliaAdmin"))",
                                            type: "POST",
                                            dataType: "json",
                                            contentType: "application/json",
                                            data: additionalData
                                        },
                                        create: {
                                            url: "@Html.Raw(Url.Action("UpdateSynonym", "AlgoliaAdmin"))",
                                            type: "POST",
                                            dataType: "json",
                                            data: setWaitTrue
                                        },
                                        update: {
                                            url: "@Html.Raw(Url.Action("UpdateSynonym", "AlgoliaAdmin"))",
                                            type: "POST",
                                            dataType: "json",
                                            data: setWaitTrue
                                        },
                                        destroy: {
                                            url: "@Html.Raw(Url.Action("DeleteSynonym", "AlgoliaAdmin"))",
                                            type: "POST",
                                            dataType: "json",
                                            data: setWaitTrue
                                        },
                                        parameterMap: function (data, operation) {
                                            if (operation != "read") {
                                                return data;
                                            } else {
                                                //for some reasons only such "Filter" data be parsed
                                                return JSON.stringify(data);
                                            }
                                        }
                                    },
                                    schema: {
                                        data: "Data",
                                        total: "Total",
                                        errors: "Errors",
                                        model: {
                                            id: "Id",
                                            fields: {
                                                Name: { editable: true, type: "string" },
                                                Value: { editable: true, type: "string" },
                                                Store: { editable: true, type: "string" },
                                                StoreId: { editable: true, type: "number" },
                                                Id: { editable: false, type: "number" }
                                            }
                                        }
                                    },
                                    requestEnd: function (e) {
                                        if (e.type == "create" || e.type == "update") {
                                            this.read();
                                        }
                                    },
                                    error: function (e) {
                                        display_kendoui_grid_error(e);
                                        // Cancel the changes
                                        this.cancelChanges();
                                    },
                                    pageSize: @(defaultGridPageSize),
                            serverPaging: true,
                                serverFiltering: true,
                                    serverSorting: true
                        },
                            pageable: {
                                refresh: true,
                                pageSizes: [@(gridPageSizes)]
                                                    },
                        toolbar: [{ name: "create", text: "@T("Admin.Common.AddNewRecord")" }],
                            editable: {
                            confirmation: "@T("Admin.Common.DeleteConfirmation")",
                                mode: "inline"
                        },
                        scrollable: false,
                            columns: [
                                {
                                    field: "Synonyms",
                                    title: "Synonyms",
                                    width: 500
                                }, {
                                    command: [
                                        {
                                            name: "edit",
                                            text: {
                                                edit: "@T("Admin.Common.Edit")",
                                                update: "@T("Admin.Common.Update")",
                                                cancel: "@T("Admin.Common.Cancel")"
                                                                    }
                                        }, {
                                            name: "destroy",
                                            text: "@T("Admin.Common.Delete")"
                                                                }
                                    ],
                                    width: 200
                                }
                            ]
                                                });
                                            });



                        function storeDropDownEditor(container, options) {
                            $('<input required data-text-field="Name" data-value-field="Id" data-bind="value:StoreId"/>')
                                .appendTo(container)
                                .kendoDropDownList({
                                    autoBind: false,
                                    dataSource: allStores
                                });
                        }
                    </script>

                    <script type="text/javascript">
                        var isWait = false;
                        $(document).ready(function () {
                            $('#search-settings').click(function () {
                                var grid = $('#settings-grid').data('kendoGrid');
                                grid.dataSource.page(1);
                                return false;
                            });
                        });

                        function setWaitTrue(data) {
                            isWait = true;
                            addAntiForgeryToken(data);
                            return data;
                        }

                        function wait(ms) {
                            var start = new Date().getTime();
                            var end = start;
                            while (end < start + ms) {
                                end = new Date().getTime();
                            }
                        }

                        function additionalData() {
                            if (isWait)
                                wait(2000);

                            var data = {
                                Synonyms: $('#@Html.FieldIdFor(model => model.Synonyms)').val()
                            };
                            addAntiForgeryToken(data);
                            isWait = false;
                            return data;
                        }

                        $("".concat("#@Html.FieldIdFor(model => model.Synonyms)")).keydown(function (event) {
                                if (event.keyCode === 13) {
                                    $("#search-settings").click();
                                    return false;
                                }
                            });
                    </script>
                </div>
            </div>
        </div>
    </div>
</div>