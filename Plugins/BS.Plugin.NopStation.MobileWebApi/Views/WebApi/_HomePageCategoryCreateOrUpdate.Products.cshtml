@model BS.Plugin.NopStation.MobileWebApi.Models.HomePage.HomePageCategoryModel
@using Nop.Web.Framework.Events;
@using Nop.Services.Events;
@using Nop.Web.Framework;
@using Nop.Core.Infrastructure;

<div class="panel-group">
    @if (Model.Id > 0)
    {
        <div class="panel panel-default">
            <div class="panel-body">
                <div id="categoryproduct-grid"></div>

                <script>
                    $(document).ready(function() {
                        $("#categoryproduct-grid").kendoGrid({
                            dataSource: {
                                type: "json",
                                transport: {
                                    read: {
                                        url: "@Html.Raw(Url.Action("HomePageCategoryProductList", "MobileWebApiConfiguration", new {homePageCategoryId = Model.Id}))",
                                        type: "POST",
                                        dataType: "json",
                                        data: addAntiForgeryToken
                                    },
                                    update: {
                                        url: "@Html.Raw(Url.Action("HomePageCategoryProductUpdate", "MobileWebApiConfiguration"))",
                                        type: "POST",
                                        dataType: "json",
                                        data: addAntiForgeryToken
                                    },
                                    destroy: {
                                        url: "@Html.Raw(Url.Action("HomePageCategoryProductDelete", "MobileWebApiConfiguration"))",
                                        type: "POST",
                                        dataType: "json",
                                        data: addAntiForgeryToken
                                    }
                                },
                                schema: {
                                    data: "Data",
                                    total: "Total",
                                    errors: "Errors",
                                    model: {
                                        id: "Id",
                                        fields: {
                                            ProductId: { editable: false, type: "number" },
                                            DisplayOrder: { editable: true, type: "number" }
                                        }
                                    }
                                },
                                requestEnd: function (e) {
                                    if (e.type == "update") {
                                        this.read();
                                    }
                                },
                                error: function(e) {
                                    display_kendoui_grid_error(e);
                                    // Cancel the changes
                                    this.cancelChanges();
                                },
                                serverPaging: true,
                                serverFiltering: true,
                                serverSorting: true
                            },
                            pageable: {
                                refresh: true,
                                numeric: false,
                                previousNext: false,
                                info: false
                            },
                            editable: {
                                confirmation: "@T("Admin.Common.DeleteConfirmation")",
                                mode: "inline"
                            },
                            scrollable: false,
                            columns: [
                            {
                                field: "ProductId",
                                title: "Product",
                                template: '<a href="/Admin/Product/Edit/#=ProductId#">#=ProductName#</a>',
                                width: 300
                            }, {
                                field: "DisplayOrder",
                                title: "Display order",
                                format: "{0:0}",
                                width: 150
                            }, {
                                command: [
                                {
                                    name: "edit",
                                    text: {
                                        edit: "@T("Admin.Common.Edit")",
                                        update: "@T("Admin.Common.Update")",
                                        cancel: "@T("Admin.Common.Cancel")"
                                    }
                                }, {
                                    name: "destroy",
                                    text: "@T("Admin.Common.Delete")"
                                }
                                ],
                                width: 200
                            }
                            ]
                        });
                    });
                </script>
            </div>
        </div>


        <div class="panel panel-default">
            <div class="panel-heading">
                @T("Admin.Catalog.Products.Pictures.AddNew")
            </div>

            <div class="panel-body">
                <script type="text/javascript">
                    var products = [];
                    $(document).ready(function () {
                        $.ajax({
                            url: '@Html.Raw(Url.Action("LoadCategoryProducts", "MobileWebApiConfiguration"))',
                            type: "get",
                            data: {
                                categoryId: @Model.CategoryId
                            },
                            success: function (response) {
                                products = response;

                                $('#@Html.FieldIdFor(model => model.AddProductModel.ProductName)').autocomplete({
                                    source: products,
                                    select: function (event, ui) {
                                        $("#@Html.FieldIdFor(model => model.AddProductModel.ProductName)").val(ui.item.value); // display the selected text
                                        $("#@Html.FieldIdFor(model => model.AddProductModel.ProductId)").val(ui.item.id); // save selected id to hidden input
                                    }
                                });
                            },
                            error: function (xhr) {
                                //Do Something to handle error
                            }
                        });


                        $('#addProduct').click(function() {
                            var productId = $("#@Html.FieldIdFor(model => model.AddProductModel.ProductId)").val();
                            var displayOrder = $("#@Html.FieldIdFor(model => model.AddProductModel.DisplayOrder)").val();

                            if (productId == '' || productId == 0) {
                                alert('Select product first');
                                return;
                            }

                            $('#addProduct').attr('disabled', true);

                            var postData = {
                                ProductId: productId,
                                DisplayOrder: displayOrder,
                                HomePageCategoryId : @Model.Id
                                };
                            addAntiForgeryToken(postData);

                            $.ajax({
                                cache: false,
                                type: "POST",
                                url: "@(Url.Action("HomePageCategoryProductCreate", "MobileWebApiConfiguration"))",
                                data: postData,
                                success: function(data) {
                                    var grid = $("#categoryproduct-grid");
                                    grid.data('kendoGrid').dataSource.read();
                                    $('#addProduct').attr('disabled', false);

                                    $("#@Html.FieldIdFor(model => model.AddProductModel.ProductId)").val(0);
                                    $("#@Html.FieldIdFor(model => model.AddProductModel.ProductName)").val('');
                                },
                                error: function(xhr, ajaxOptions, thrownError) {
                                    alert('Failed to add product.');
                                    $('#addProduct').attr('disabled', false);
                                }
                            });
                        });
                    });
                </script>
                <div class="form-group">
                    <div class="col-md-3">
                        @Html.NopLabelFor(model => model.AddProductModel.ProductName)
                    </div>
                    <div class="col-md-9">
                        @Html.NopEditorFor(model => model.AddProductModel.ProductName)
                        @Html.HiddenFor(model => model.AddProductModel.ProductId)
                        @Html.ValidationMessageFor(model => model.AddProductModel.ProductName)
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-3">
                        @Html.NopLabelFor(model => model.AddProductModel.DisplayOrder)
                    </div>
                    <div class="col-md-9">
                        @Html.NopEditorFor(model => model.AddProductModel.DisplayOrder)
                        @Html.ValidationMessageFor(model => model.AddProductModel.DisplayOrder)
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-9 col-md-offset-3">
                        <button type="button" id="addProduct" class="btn btn-primary">Add product</button>
                    </div>
                </div>
            </div>
        </div>
    }
</div>
