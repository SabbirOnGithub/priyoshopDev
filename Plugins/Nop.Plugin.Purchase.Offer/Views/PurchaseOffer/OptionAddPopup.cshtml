@model Nop.Plugin.Purchase.Offer.ViewModel.AddOptionModel

@{
    Layout = "~/Administration/Views/Shared/_AdminPopupLayout.cshtml";
    ViewBag.Title = T("Admin.Promotions.Discounts.AppliedToProducts.AddNew").Text;
}
@using Nop.Web.Framework
@using (Html.BeginForm("OptionAddPopup", "PurchaseOffer", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    <div class="content-header clearfix">
        <h1 class="pull-left">
            @if (Model.Id > 0)
            {
                <span>Edit Option</span>
            }
            else
            {
                <span>Add a New Option</span>
            }
        </h1>
        <div class="pull-right">
            &nbsp;
        </div>
    </div>
    <input name="formId" type="hidden" value="@(ViewBag.formId)" />
    <input name="btnId" type="hidden" value="@(ViewBag.btnId)" />

    if (ViewBag.RefreshPage == true)
    {
        <script type="text/javascript">
            try {window.opener.$('#@(ViewBag.btnId)').trigger('click') ;}
            catch (e){}
            window.close();
        </script>
    }
    <style>
        .form-horizontal .panel-popup .label-wrapper {
            float: right !important;
        }
    </style>
    <script>
        function readURL(input) {
            if (input.files && input.files[0]) {
                var reader = new FileReader();

                reader.onload = function (e) {
                    $('#imgHolder').attr('src', e.target.result);
                }
                reader.readAsDataURL(input.files[0]);
            }
        }
    </script>

    <div class="content">
        <div class="form-horizontal">
            <div class="panel-group">
                <div class="panel panel-default panel-search panel-popup">
                    <div class="panel-body">
                        <div class="row">
                            <div class="col-sm-12">
                                <div class="form-group">
                                    <div class="col-xs-3 col-sm-3">
                                        @Html.NopLabelFor(model => model.PictureId)
                                    </div>
                                    <div class="col-xs-9 col-sm-9">
                                        @Html.NopEditorFor(model => model.PictureId)
                                    </div>
                                </div>
                                <div class="form-group">
                                    <div class="col-xs-3 col-sm-3">
                                        @Html.NopLabelFor(model => model.ProductName)
                                    </div>
                                    <div class="col-xs-9 col-sm-9">
                                        @Html.HiddenFor(model => model.Id)
                                        @Html.NopEditorFor(model => model.ProductName)
                                    </div>
                                </div>
                                <div class="form-group">
                                    <div class="col-xs-3 col-sm-3">
                                        @Html.NopLabelFor(model => model.Note)
                                    </div>
                                    <div class="col-xs-9 col-sm-9">
                                        @Html.NopEditorFor(model => model.Note)
                                    </div>
                                </div>
                            </div>
                            <div class="col-sm-12">
                                <div class="form-group">
                                    <div class="col-xs-3 col-sm-3">
                                        @Html.NopLabelFor(model => model.Quantity)
                                    </div>
                                    <div class="col-xs-5 col-sm-3">
                                        @Html.NopEditorFor(model => model.Quantity)
                                    </div>
                                </div>
                                <div class="form-group">
                                    <div class="col-xs-3 col-sm-3">
                                        @Html.NopLabelFor(model => model.MinimumPurchaseAmount)
                                    </div>
                                    <div class="col-xs-5 col-sm-3">
                                        @Html.NopEditorFor(model => model.MinimumPurchaseAmount)
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="panel-footer">
                        <button type="submit" name="save" class="btn bg-blue">
                            <i class="fa fa-floppy-o"></i>
                            @T("Admin.Common.Save")
                        </button>
                    </div>
                </div>

                @*<div class="panel panel-default panel-search panel-popup">
                        <div class="panel-body">
                            <div class="row">
                                <div class="col-sm-6">
                                    <div class="form-group">
                                        <div class="col-sm-5">
                                            @Html.NopLabelFor(model => model.SearchProductName)
                                        </div>
                                        <div class="col-sm-7">
                                            @Html.NopEditorFor(model => model.SearchProductName)
                                        </div>
                                    </div>
                                    <div class="form-group" @(Model.AvailableCategories.SelectionIsNotPossible() ? Html.Raw("style=\"display:none\"") : null)>
                                        <div class="col-sm-5">
                                            @Html.NopLabelFor(model => model.SearchCategoryId)
                                        </div>
                                        <div class="col-sm-7">
                                            @Html.NopDropDownList("SearchCategoryId", Model.AvailableCategories)
                                        </div>
                                    </div>
                                    <div class="form-group" @(Model.AvailableVendors.SelectionIsNotPossible() ? Html.Raw("style=\"display:none\"") : null)>
                                        <div class="col-sm-5">
                                            @Html.NopLabelFor(model => model.SearchVendorId)
                                        </div>
                                        <div class="col-sm-7">
                                            @Html.NopDropDownList("SearchVendorId", Model.AvailableVendors)
                                        </div>
                                    </div>
                                </div>
                                <div class="col-sm-6">
                                    <div class="form-group" @(Model.AvailableStores.SelectionIsNotPossible() ? Html.Raw("style=\"display:none\"") : null)>
                                        <div class="col-sm-5">
                                            @Html.NopLabelFor(model => model.SearchStoreId)
                                        </div>
                                        <div class="col-sm-7">
                                            @Html.NopDropDownList("SearchStoreId", Model.AvailableStores)
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <div class="col-sm-5">
                                            @Html.NopLabelFor(model => model.SearchProductTypeId)
                                        </div>
                                        <div class="col-sm-7">
                                            @Html.NopDropDownList("SearchProductTypeId", Model.AvailableProductTypes)
                                        </div>
                                    </div>
                                    <div class="form-group" @(Model.AvailableManufacturers.SelectionIsNotPossible() ? Html.Raw("style=\"display:none\"") : null)>
                                        <div class="col-sm-5">
                                            @Html.NopLabelFor(model => model.SearchManufacturerId)
                                        </div>
                                        <div class="col-sm-7">
                                            @Html.NopDropDownList("SearchManufacturerId", Model.AvailableManufacturers)
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-sm-12">
                                    <button type="button" id="search-products" class="btn btn-primary btn-search">
                                        <i class="fa fa-search"></i>
                                        @T("Admin.Common.Search")
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="panel panel-default">
                        <div class="panel-body">
                            <div id="products-grid"></div>

                            <script>
                                $(document).ready(function () {
                                    $("#products-grid").kendoGrid({
                                        dataSource: {
                                            type: "json",
                                            transport: {
                                                read: {
                                                    url: "@Html.Raw(Url.Action("ProductAddPopupList", "Discount"))",
                                                    type: "POST",
                                                    dataType: "json",
                                                    data: additionalData
                                                }
                                            },
                                            schema: {
                                                model: {
                                                    id: "Id"
                                                },
                                                data: "Data",
                                                total: "Total",
                                                errors: "Errors"
                                            },
                                            error: function(e) {
                                                display_kendoui_grid_error(e);
                                                // Cancel the changes
                                                this.cancelChanges();
                                            },
                                            pageSize: 15,
                                            serverPaging: true,
                                            serverFiltering: true,
                                            serverSorting: true
                                        },
                                        pageable: {
                                            refresh: true
                                        },
                                        editable: {
                                            confirmation: "@T("Admin.Common.DeleteConfirmation")",
                                            mode: "inline"
                                        },
                                        change: function () {
                                            var id = $.map(this.select(), function (item) {
                                                return $(item.cells[0]).text();
                                            });
                                            var name = $.map(this.select(), function (item) {
                                                return $(item.cells[1]).text();
                                            });
                                            $("#ProductName").val(name);
                                            $("#ProductId").val(id);
                                        },
                                        scrollable: false,
                                        selectable: "row",
                                        columns: [{
                                            field: "Id",
                                            title: "Id",
                                            width: 50
                                        }, {
                                            field: "Name",
                                            title: "@T("Admin.Catalog.Products.Fields.Name")"
                                        }, {
                                            field: "Published",
                                            title: "@T("Admin.Catalog.Products.Fields.Published")",
                                            width: 100,
                                            headerAttributes: { style: "text-align:center" },
                                            attributes: { style: "text-align:center" },
                                            template: '# if(Published) {# <i class="fa fa-check true-icon"></i> #} else {# <i class="fa fa-close false-icon"></i> #} #'
                                        }]

                                    });
                                });
                            </script>

                            <script type="text/javascript">
                                $(document).ready(function () {
                                    $('#search-products').click(function () {
                                        var grid = $('#products-grid').data('kendoGrid');
                                        grid.dataSource.page(1); //new search. Set page size to 1
                                        //grid.dataSource.read(); we already loaded the grid above using "page" function
                                        //clear selected checkboxes
                                        $('.checkboxGroups').attr('checked', false).change();
                                        return false;
                                    });

                                    $("#SearchProductName").keydown(function (event) {
                                        if (event.keyCode == 13) {
                                            $("#search-products").click();
                                            return false;
                                        }
                                    });

                                    //wire up checkboxes
                                    $('#mastercheckbox').click(function () {
                                        $('.checkboxGroups').attr('checked', $(this).is(':checked')).change();
                                    });

                                    $('#products-grid').on('change', 'input[type=checkbox][id!=mastercheckbox]', function (e) {
                                        updateMasterCheckbox();
                                    });
                                });

                                function additionalData() {
                                    var data = {
                                        SearchProductName: $('#SearchProductName').val(),
                                        SearchCategoryId: $('#SearchCategoryId').val(),
                                        SearchManufacturerId: $('#SearchManufacturerId').val(),
                                        SearchStoreId: $('#SearchStoreId').val(),
                                        SearchVendorId: $('#SearchVendorId').val(),
                                        SearchProductTypeId: $('#SearchProductTypeId').val()
                                    };
                                    addAntiForgeryToken(data);
                                    return data;
                                }

                                function updateMasterCheckbox() {
                                    var numChkBoxes = $('#products-grid input[type=checkbox][id!=mastercheckbox]').length;
                                    var numChkBoxesChecked = $('#products-grid input[type=checkbox][id!=mastercheckbox]:checked').length;
                                    $('#mastercheckbox').attr('checked', numChkBoxes == numChkBoxesChecked && numChkBoxes > 0);
                                }
                            </script>
                        </div>
                        <div class="panel-footer">
                            <button type="submit" name="save" class="btn bg-blue">
                                <i class="fa fa-floppy-o"></i>
                                @T("Admin.Common.Save")
                            </button>
                        </div>
                    </div>*@
            </div>
        </div>
    </div>
}
