@using BS.Plugin.NopStation.MobileApp.Helpers
@model BS.Plugin.NopStation.MobileApp.Models.CriteriaModel
@using Nop.Web.Framework


@Html.ValidationSummary(true)
@Html.HiddenFor(model => model.Id)
<div class="raw form-horizontal clearfix">
    <div class="panel-group">
        <div class="panel panel-default">
            <div>
                <div class="panel-body" style="padding-left:30px">
                    <div class="form-group input-holder">
                        <div class="pull-left">
                            @Html.NopLabelFor(model => model.Name) @*<span>:</span>*@
                        </div>
                        <div class="pull-left">
                            @Html.EditorFor(model => model.Name)
                            @Html.ValidationMessageFor(model => model.Name)

                            @*<textarea cols=10 rows=10> </textarea>*@

                            @Html.HiddenFor(model => model.Query)
                        </div>
                    </div>

                    <div id="criteria-holder" class="form-group criteria-holder">
                        <div class="pull-left">
                            <strong>Criteria Options</strong>
                        </div>
                        <div class="pull-left" style="padding-left: 25px">
                            @Html.DropDownListFor(model => model.Columns, ComboList.ColumnList)
                            @Html.ValidationMessageFor(model => model.Columns)

                            @Html.DropDownListFor(model => model.Conditions, ComboList.ConditionList)
                            @Html.ValidationMessageFor(model => model.Conditions)

                            @Html.EditorFor(model => model.KeyWord)
                            <input type="text" class="date" />
                            @Html.ValidationMessageFor(model => model.KeyWord)

                            @Html.DropDownListFor(model => model.AndOr, ComboList.AndOrList)
                            @Html.ValidationMessageFor(model => model.AndOr)
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
                    <script type="text/javascript">

	/*$(document).ready(function() {
		$("#Columns").change(function () {
			var selectedItem = $(this).val().split(".")[1];
			if (selectedItem.indexOf("Date") !== -1 || selectedItem === "Created on") {
				$(this).parent().find("#KeyWord").datepicker();
			}
			else {
				$(this).parent().find("#KeyWord").datepicker("destroy");
			}
		});
	});*/

	$("#criteria-holder").cloneObject({ 'data': '@Model.Query' });


	function GenerateModelData() {

		var tables, filterKey, conditions, keyWord, adnOr, query;

		tables = $.map($(".criteria-holder").find('#Columns'), function (elem, index) {

			if (index < $(".criteria-holder").length - 1) {
				return $(elem).val().split(".")[0];
			}

		}).join(",");

		var temp = [];
		$.each(tables.split(","), function (i, el) {
			if ($.inArray(el, temp) === -1) {
				temp.push(el);
			}
		});

		tables = temp.join(",");

		filterKey = $.map($(".criteria-holder").find('#Columns'), function (elem, index) {

			if (index < $(".criteria-holder").length-1) {
				return $(elem).val(); //.split(".")[1];
			}

		}).join(",");

		conditions = $.map($(".criteria-holder").find('#Conditions'), function (elem, index) {

			if (index < $(".criteria-holder").length - 1) {
				return $(elem).val();
			}

		}).join(",");

		keyWord = $.map($(".criteria-holder").find('#KeyWord'), function (elem, index) {

			if (index < $(".criteria-holder").length - 1) {
				return $(elem).val();
			}

		}).join(",");

		adnOr = $.map($(".criteria-holder").find('#AndOr'), function (elem, index) {

			if (index < $(".criteria-holder").length - 2) {
				return $(elem).val();
			}

		}).join(",");

		query = $.map($(".criteria-holder"), function (elem, index) {

			if (index < $(".criteria-holder").length - 1) {
			    var keyWord = ($(elem).find("#KeyWord").is(":visible")) ? $(elem).find("#KeyWord").val() : $(elem).find(".date").val();

			    return $(elem).find("#Columns").val() + "^" + $(elem).find("#Conditions").val() + "^" + keyWord + "^" + $(elem).find("#AndOr").val(); //.split("^")[1]
			}
			/*else if (index === $(".criteria-holder").length - 2) {
			return $(elem).find("#Columns").val() + "^" + $(elem).find("#Conditions").val() + "^" + $(elem).find("#KeyWord").val(); //.split("^")[1]
			}*/

		}).join(",");

		//query = "Select Distinct Customers$$.Email from " + tables + " Where " + query;

		$('#@Html.FieldIdFor(model => model.Columns)').val(filterKey);
	    $('#@Html.FieldIdFor(model => model.Conditions)').val(filterKey);
	    $('#@Html.FieldIdFor(model => model.KeyWord)').val(keyWord);
	    $('#@Html.FieldIdFor(model => model.AndOr)').val(adnOr);
	    $('#@Html.FieldIdFor(model => model.Query)').val(query);
		var model = {
			 Id: $('#@Html.FieldIdFor(model => model.Id)').val(),
		     Name:  $('#@Html.FieldIdFor(model => model.Name)').val(),
			Columns: filterKey,
			Conditions: conditions,
			KeyWord: keyWord,
			AndOr: adnOr,
			Query: query
		};

	    $(form).submit();

	}



                    </script>
