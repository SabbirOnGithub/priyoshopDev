@model PurchaseOfferModel

@using Nop.Core.Domain.Discounts;
@using Nop.Services
@using Nop.Web.Framework.UI;

@{
    Html.AddScriptParts("~/Administration/Scripts/jquery.tmpl.min.js");
}

<script>
    $(document).ready(function () {
        bindBootstrapTabSelectEvent('PurchaseOffer-edit');
    });
</script>

@Html.ValidationSummary(false)
@Html.HiddenFor(model => model.Id)

<div class="content">
    <div class="form-horizontal">
        <div id="PurchaseOffer-edit" class="nav-tabs-custom">
            <ul class="nav nav-tabs">
                @Html.RenderBootstrapTabHeader("tab-info", @T("Admin.Promotions.PurchaseOffers.Info"), true)
                @Html.RenderBootstrapTabHeader("tab-applied-to-products", @T("Admin.Promotions.PurchaseOffers.AppliedToProducts"))
                @Html.RenderBootstrapTabHeader("tab-applied-to-vendors", @T("Admin.Promotions.PurchaseOffers.AppliedToVendors"))
                @Html.RenderBootstrapTabHeader("tab-applied-to-categories", @T("Admin.Promotions.PurchaseOffers.AppliedToCategories"))
                @Html.RenderBootstrapTabHeader("tab-applied-to-manufacturers", @T("Admin.Promotions.PurchaseOffers.AppliedToManufacturers"))
                @if (Model.Id > 0)
                {
                    @Html.RenderBootstrapTabHeader("tab-history", @T("Admin.Promotions.PurchaseOffers.History"))
                }
            </ul>
            <div class="tab-content">
                @Html.RenderBootstrapTabContent("tab-info", @TabInfo(), true)
                @Html.RenderBootstrapTabContent("tab-applied-to-products", @TabAppliedToProducts())
                @Html.RenderBootstrapTabContent("tab-applied-to-vendors", @TabAppliedToVendors())
                @Html.RenderBootstrapTabContent("tab-applied-to-categories", @TabAppliedToCategories())
                @Html.RenderBootstrapTabContent("tab-applied-to-manufacturers", @TabAppliedToManufacturers())
                @if (Model.Id > 0)
                {
                    @Html.RenderBootstrapTabContent("tab-history", @TabHistory())
                }
            </div>
        </div>
    </div>
</div>

@{
    //custom tabs
    var eventMessage = new AdminTabStripCreated(this.Html, "purchaseoffer-edit");
    EngineContext.Current.Resolve<IEventPublisher>().Publish(eventMessage);
    foreach (var eventBlock in eventMessage.BlocksToRender)
    {
        @eventBlock
    }
}

@*save selected tab name*@
<input type="hidden" id="selected-tab-name" name="selected-tab-name" value="@(Html.GetSelectedTabName())">

@helper TabInfo()
{
    @Html.Partial("_CreateOrUpdate.Info", Model)
}

@helper TabAppliedToProducts()
{
    @Html.Partial("_CreateOrUpdate.Product", Model)
}

@helper TabAppliedToVendors()
{
    @Html.Partial("_CreateOrUpdate.Vendor", Model)
}

@helper TabAppliedToCategories()
{
    @Html.Partial("_CreateOrUpdate.Category", Model)
}

@helper TabAppliedToManufacturers()
{
    @Html.Partial("_CreateOrUpdate.Manufacturer", Model)
}


@helper TabHistory()
{
    var defaultGridPageSize = EngineContext.Current.Resolve<Nop.Core.Domain.Common.AdminAreaSettings>().DefaultGridPageSize;
    var gridPageSizes = EngineContext.Current.Resolve<Nop.Core.Domain.Common.AdminAreaSettings>().GridPageSizes;

    <div class="panel-group">
        <div class="panel panel-default">
            <div class="panel-body">
                <div id="usagehistory-grid"></div>

                <script>
                    $(document).ready(function() {
                        $("#usagehistory-grid").kendoGrid({
                            dataSource: {
                                type: "json",
                                transport: {
                                    read: {
                                        url: "@Html.Raw(Url.Action("UsageHistoryList", "PurchaseOffer", new { purchaseOfferId = Model.Id}))",
                                        type: "POST",
                                        dataType: "json",
                                        data: addAntiForgeryToken
                                    },
                                    destroy: {
                                        url: "@Html.Raw(Url.Action("UsageHistoryDelete", "PurchaseOffer"))",
                                        type: "POST",
                                        dataType: "json",
                                        data: addAntiForgeryToken
                                    }
                                },
                                schema: {
                                    data: "Data",
                                    total: "Total",
                                    errors: "Errors",
                                    model: {
                                        id: "Id",
                                        fields: {
                                            //do not implicitly specify all fields
                                            //we do it only for fields which implicitly require it
                                            //otherwise, they'll be formatted wrong way
                                            CreatedOn: { type: "date" }
                                        }
                                    }
                                },
                                error: function(e) {
                                    display_kendoui_grid_error(e);
                                    // Cancel the changes
                                    this.cancelChanges();
                                },
                                pageSize: @(defaultGridPageSize),
                                serverPaging: true,
                                serverFiltering: true,
                                serverSorting: true
                            },
                            pageable: {
                                refresh: true,
                                pageSizes: [@(gridPageSizes)]
                            },
                            editable: {
                                confirmation: "@T("Admin.Common.DeleteConfirmation")",
                                mode: "inline"
                            },
                            scrollable: false,
                            columns: [
                            {
                                field: "CreatedOn",
                                title: "@T("Admin.Promotions.PurchaseOffers.History.CreatedOn")",
                                width: 200,
                                type: "date",
                                format: "{0:G}"
                            }, {
                                field: "OrderId",
                                title: "@T("Admin.Promotions.PurchaseOffers.History.Order")",
                                width: 200,
                                template: '<a href="@Url.Content("~/Admin/Order/Edit/")#=OrderId#">#=OrderId# - @T("Admin.Common.View")</a>'
                            }, {
                                field: "OrderTotal",
                                title: "@T("Admin.Promotions.PurchaseOffers.History.OrderTotal")",
                                width: 200
                            }, {
                                command: { name: "destroy", text: "@T("Admin.Common.Delete")" },
                                title: "@T("Admin.Common.Delete")",
                                width: 100
                            }
                            ]
                        });
                    });
                </script>
            </div>
        </div>
    </div>
}

