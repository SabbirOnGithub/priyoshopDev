@model ShoppingCartModel
@using Nop.Core
@using Nop.Core.Domain.Tax
@using Nop.Core.Infrastructure
@using Nop.Web.Models.ShoppingCart;
@{
    Html.AddCssFileParts("~/Themes/Pavilion/Content/css/font-awesome.css");
    var webHelper = EngineContext.Current.Resolve<IWebHelper>();
}

<style>
    .buyOneGetOne {
        background: lightgreen;
        color: #000;
        text-align: center;
        padding: 10px 0;
        margin: 10px 0;
        box-shadow: 0 0 10px #ccc;
        border: 1px solid #f0f0f0;
    }

    .buyOneGetOneOffer {
        /*background: #fff;*/
        background: lightgreen;
        color: #000;
        text-align: center;
        padding: 10px 0;
        margin: 10px 0;
        border: 1px solid #f0f0f0;
        box-shadow: 0 0 10px #ccc;
    }

        .buyOneGetOneOffer a {
            color: #00a1b1;
        }
</style>


<div class="order-summary-content">
    @Html.Widget("order_summary_content_before")
    @Html.Partial("_OrderReviewData", Model.OrderReviewData)
    @if (Model.Items.Count > 0)
    {
        if (Model.Warnings.Count > 0)
        {
            <div class="message-error">
                <ul>
                    @foreach (var warning in Model.Warnings)
                    {
                        <li>@warning</li>
                    }
                </ul>
            </div>
        }
        @*we add enctype = "multipart/form-data" because "File upload" attribute control type requires it*@
        using (Html.BeginRouteForm("ShoppingCart", FormMethod.Post, new { enctype = "multipart/form-data", id = "shopping-cart-form" }))
        {
            @Html.AntiForgeryToken()
            <div class="table-wrapper">
                <script>
                    function RemoveThis(elem) {
                        console.log("fadsff");
                        console.log($(elem));
                        $(elem).siblings('.remove-check-div').find('[type=checkbox]').prop('checked', true);
                        console.log($(elem).siblings('.remove-from-cart').find('[type=checkbox]'));
                        $(".update-cart-button").trigger("click");
                    }
                </script>
                <table class="cart">
                    <colgroup>
                        <col width="1" />
                        @if (Model.IsEditable)
                        {
                            <col width="1" />
                        }
                        @if (Model.ShowProductImages)
                        {
                            <col width="1" />
                        }
                        <col />
                        <col width="1" />
                        <col width="1" />
                        <col width="1" />
                    </colgroup>
                    <thead>
                        <tr class="cart-header-row">
                            <th>
                                <span class="item-count">#</span>
                            </th>
                            @if (Model.IsEditable)
                            {
                                <th class="remove-from-cart" data-hide="w410, w480, w580">
                                    @T("ShoppingCart.Remove")
                                </th>
                            }
                            @if (Model.ShowProductImages)
                            {
                                <th class="product-picture">
                                    @T("ShoppingCart.Image")
                                </th>
                            }
                            <th class="product" data-hide="w410, w480">
                                @T("ShoppingCart.Product(s)")
                            </th>
                            <th class="unit-price" data-hide="w410, w480, w580, w768">
                                @T("ShoppingCart.UnitPrice")
                            </th>
                            <th class="quantity" data-hide="w410, w480, w580, w768">
                                @T("ShoppingCart.Quantity")
                            </th>
                            <th class="subtotal">
                                @T("ShoppingCart.ItemTotal")
                            </th>
                        </tr>
                    </thead>
                    <tbody>
                        @{var counter = 0;}
                        @foreach (var item in Model.Items)
                        {
                            counter++;
                            <tr class="cart-item-row">
                                <td>
                                    <span class="item-count">@counter</span>
                                </td>
                                @if (Model.IsEditable)
                                {
                                    <td class="remove-from-cart">
                                        <a class="item-remove-button" onclick="RemoveThis(this)">
                                            <i class="fa fa-trash" aria-hidden="true"></i>
                                        </a>
                                        <div class="remove-check-div" style="display:none">
                                            <label class="td-title">@T("ShoppingCart.Remove")</label>
                                            <input type="checkbox" name="removefromcart" value="@(item.Id)" />
                                        </div>
                                    </td>
                                }
                                @if (Model.ShowProductImages)
                                {
                                    <td class="product-picture">
                                        <a href="@Url.RouteUrl("Product", new { SeName = item.ProductSeName })"><img alt="@item.Picture.AlternateText" src="@item.Picture.ImageUrl" title="@item.Picture.Title" /></a>
                                    </td>
                                }
                                <td class="product">
                                    <a href="@Url.RouteUrl("Product", new { SeName = item.ProductSeName })" class="product-name">@item.ProductName</a>
                                    @if (!String.IsNullOrEmpty(item.AttributeInfo))
                                    {
                                        <div class="attributes">
                                            @Html.Raw(item.AttributeInfo)
                                        </div>
                                    }
                                    @if (!String.IsNullOrEmpty(item.RecurringInfo))
                                    {
                                        <div class="recurring-info">
                                            @Html.Raw(item.RecurringInfo)
                                        </div>
                                    }
                                    @if (!String.IsNullOrEmpty(item.RentalInfo))
                                    {
                                        <div class="rental-info">
                                            @Html.Raw(item.RentalInfo)
                                        </div>
                                    }
                                    @if (Model.IsEditable && item.AllowItemEditing)
                                    {
                                        var editCartItemUrl = Url.RouteUrl("Product", new { SeName = item.ProductSeName });
                                        editCartItemUrl = webHelper.ModifyQueryString(editCartItemUrl, "updatecartitemid=" + item.Id, null);
                                        <div class="edit-item">
                                            <a href="@editCartItemUrl">@T("Common.Edit")</a>
                                        </div>
                                    }
                                    @if (item.Warnings.Count > 0)
                                    {
                                        <div class="message-error">
                                            <ul>
                                                @foreach (var warning in item.Warnings)
                                                {
                                                    <li>@warning</li>
                                                }
                                            </ul>
                                        </div>
                                    }
                                </td>
                                <td class="unit-price">
                                    <span class="product-unit-price">@item.UnitPrice</span>
                                </td>
                                <td class="quantity">
                                    @if (Model.IsEditable)
                                    {
                                        if (item.AllowedQuantities.Count > 0)
                                        {
                                            <select name="itemquantity@(item.Id)" class="qty-dropdown">
                                                @foreach (var qty in item.AllowedQuantities)
                                                {
                                                    <option selected="@qty.Selected" value="@qty.Value">@qty.Value</option>
                                                }
                                            </select>
                                        }
                                        else
                                        {
                                            <input name="itemquantity@(item.Id)" type="text" value="@(item.Quantity)" class="qty-input" />
                                        }
                                    }
                                    else
                                    {
                                        <span>@item.Quantity</span>
                                    }
                                </td>
                                <td class="subtotal">
                                    <span class="product-subtotal">@item.SubTotal</span>
                                    @if (!String.IsNullOrEmpty(item.Discount))
                                    {
                                        <div class="discount">
                                            @T("ShoppingCart.ItemYouSave"): @item.Discount
                                        </div>
                                    }
                                </td>
                            </tr>
                        }
                        @if (Model.AvailGiftItem)
                        {
                            counter++;
                            <tr class="cart-item-row">
                                <td>
                                    <span class="item-count">@counter</span>
                                </td>
                                @if (Model.IsEditable)
                                {
                                    <td class="remove-from-cart"></td>
                                }
                                @if (Model.ShowProductImages)
                                {
                                    <td class="product-picture">
                                        <a href="@Url.RouteUrl("Product", new { SeName = Model.GiftItem.ProductSeName })"><img alt="@Model.GiftItem.Picture.AlternateText" src="@Model.GiftItem.Picture.ImageUrl" title="@Model.GiftItem.Picture.Title" /></a>
                                    </td>
                                }
                                <td class="product">
                                    <a href="@Url.RouteUrl("Product", new { SeName = Model.GiftItem.ProductSeName })" class="product-name">@Model.GiftItem.ProductName</a>
                                    @if (!String.IsNullOrEmpty(Model.GiftItem.AttributeInfo))
                                    {
                                        <div class="attributes">
                                            @Html.Raw(Model.GiftItem.AttributeInfo)
                                        </div>
                                    }
                                </td>
                                <td class="unit-price">
                                    <span class="product-unit-price">@Model.GiftItem.UnitPrice</span>
                                </td>
                                <td class="quantity">
                                    <span>@Model.GiftItem.Quantity</span>
                                </td>
                                <td class="subtotal">
                                    <span class="product-subtotal">@Model.GiftItem.SubTotal</span>
                                    <div class="discount">
                                        Free Gift
                                    </div>
                                </td>
                            </tr>
                        }
                        @Html.Widget("purchase_offer_order_summary")
                    </tbody>
                </table>
            </div>

            if (Model.IsBuyOneGetOneOfferActivated)
            {
                if (Model.IsActivatedBuyOneGetOne)
                {
                    <div class="buyOneGetOne">
                        <label>@Model.BuyOneGetOneDiscountMessage</label>
                    </div>
                }
                else
                {
                    <div class="buyOneGetOneOffer">
                        <label>@Model.BuyOneGetOneDiscountMessage :</label> <a href="@Model.BuyOneGetOneDiscountOfferUrl">@T("BuyOneGetOne.Discount.Offer.Url")</a>
                    </div>
                }

            }

            if (Model.IsEditable && Model.Items.Count > 0 && Model.DisplayTaxShippingInfo)
            {
                var inclTax = EngineContext.Current.Resolve<IWorkContext>().TaxDisplayType == TaxDisplayType.IncludingTax;
                //tax info is already included in the price (incl/excl tax). that's why we display only shipping info here
                //of course, you can modify appropriate locales to include VAT info there
                <div class="tax-shipping-info">
                    @T(inclTax ? "ShoppingCart.TaxShipping.InclTax" : "ShoppingCart.TaxShipping.ExclTax", Url.RouteUrl("Topic", new { SeName = Html.GetTopicSeName("shippinginfo") }))
                </div>
            }

            <div class="cart-footer">
                @Html.Widget("order_summary_cart_footer")
                @if (Model.IsEditable)
                {
                    <div class="cart-collaterals">
                        <div class="cart-options">
                            @if (Model.IsEditable)
                            {
                                <div class="common-buttons">
                                    <input type="submit" name="updatecart" value="@T("ShoppingCart.UpdateCart")" class="button-2 update-cart-button" />
                                    <input type="submit" name="continueshopping" value="@T("ShoppingCart.ContinueShopping")" class="button-2 continue-shopping-button" />
                                </div>
                            }
                            @if (!String.IsNullOrEmpty(Model.CheckoutAttributeInfo))
                            {
                                <div class="selected-checkout-attributes">
                                    @Html.Raw(Model.CheckoutAttributeInfo)
                                </div>
                            }
                        </div>
                        @Html.Widget("purchase_offer_list")
                        @if (Model.DiscountBox.Display || Model.GiftCardBox.Display)
                        {
                            <div class="cart-footer-sections">
                                @if (Model.DiscountBox.Display)
                                {
                                    <div class="coupon-codes">
                                        <div class="">
                                            <strong>@T("ShoppingCart.DiscountCouponCode")</strong>
                                        </div>
                                        <div class="">
                                            @Html.Partial("_DiscountBox", Model.DiscountBox)
                                        </div>
                                    </div>
                                }
                                @if (Model.GiftCardBox.Display)
                                {
                                    <div class="gift-cards">
                                        <div class="">
                                            <strong>@T("ShoppingCart.GiftCardCouponCode")</strong>
                                        </div>
                                        <div class="">
                                            @Html.Partial("_GiftCardBox", Model.GiftCardBox)
                                        </div>
                                    </div>
                                }
                            </div>
                        }

                        @Html.Partial("_CheckoutAttributes", Model.CheckoutAttributes, new ViewDataDictionary())
                        @Html.Widget("order_summary_content_deals")
                    </div>
                }
                <div class="totals">
                    @Html.Action("OrderTotals", "ShoppingCart", new { isEditable = Model.IsEditable })
                    @if (Model.IsEditable)
                    {
                        if (!String.IsNullOrEmpty(Model.MinOrderSubtotalWarning))
                        {
                            <div class="min-amount-warning">
                                @Model.MinOrderSubtotalWarning
                            </div>
                        }
                    }
                    @if (Model.IsEditable)
                    {
                        if (Model.TermsOfServiceOnShoppingCartPage)
                        {
                            <div id="terms-of-service-warning-box" title="@T("Checkout.TermsOfService")" style="display:none;">
                                <p>@T("Checkout.TermsOfService.PleaseAccept")</p>
                            </div>
                            <div class="terms-of-service">
                                <div>
                                    <input id="termsofservice" type="checkbox" name="termsofservice" />
                                    <span>
                                        @T("Checkout.TermsOfService.IAccept")
                                        <a class="read" id="read-terms">
                                            @T("Checkout.TermsOfService.Read")
                                        </a>
                                    </span>
                                    <script>
                                        $(document).ready(function () {
                                            $('#read-terms').on('click', function (e) {
                                                e.preventDefault();
                                                displayPopupContentFromUrl('@Url.RouteUrl("TopicPopup", new {SystemName = "conditionsofuse"})', '@T("Checkout.TermsOfService")');
                                            });
                                        });
                                    </script>
                                </div>
                            </div>
                        }
                        <div class="checkout-buttons">
                            @if (String.IsNullOrEmpty(Model.MinOrderSubtotalWarning))
                            {
                                <script type="text/javascript">
                                    $(document).ready(function () {
                                        $('#checkout').click(function () {
                                            //terms of service
                                            var termOfServiceOk = true;
                                            if ($('#termsofservice').length > 0) {
                                                //terms of service element exists
                                                if (!$('#termsofservice').is(':checked')) {
                                                    $("#terms-of-service-warning-box").dialog();
                                                    termOfServiceOk = false;
                                                } else {
                                                    termOfServiceOk = true;
                                                }
                                            }
                                            return termOfServiceOk;
                                        });
                                    });
                                </script>
                                <button type="submit" id="checkout" name="checkout" value="checkout" class="button-1 checkout-button">
                                    @*@T("Checkout.Button")*@
                                    Confirm Order
                                </button>
                            }
                        </div>

                        var addonButtonsHtml = Html.Partial("_ButtonPaymentMethod", Model);
                        if (!MvcHtmlString.IsNullOrEmpty(addonButtonsHtml))
                        {
                            <div class="addon-buttons">
                                @*Payment method buttons (e.g. GoogleCheckoutButton, Paypal Express)*@
                                @addonButtonsHtml
                            </div>
                        }

                    }
                </div>
            </div>
            if (Model.IsEditable)
            {
                @Html.Action("CrossSellProducts", "Product")
            }
        }
    }
    else
    {
        <div class="no-data">
            @T("ShoppingCart.CartIsEmpty")
        </div>
    }
    <div class="cart-need-help">Need Help: <a>09636-102030</a></div>
    @Html.Widget("order_summary_content_after")
    @if (Model.AvailGiftItem)
    {
        <link href="~/Content/lobibox/css/lobibox.min.css" rel = "stylesheet" />
        <script src="~/Content/lobibox/js/lobibox.min.js"></script>
        <script>
            $(document).ready(function () {
                Lobibox.notify('success', {
                    size: 'large',
                    sound: true,
                    soundPath: '/Content/lobibox/sounds/',
				    title : 'Congratulation! ',
				    iconSource : 'fontAwesome',
				    img : '@Model.GiftItem.Picture.ImageUrl',
                    msg: '<b>You got <a href="@Url.RouteUrl("Product", new { SeName = Model.GiftItem.ProductSeName })">@Model.GiftItem.ProductName</a></b>'
                });
            });
        </script>
    }
</div>
